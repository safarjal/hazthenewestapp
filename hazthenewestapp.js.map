{"version":3,"sources":["webpack://hazthenewestapp/webpack/universalModuleDefinition","webpack://hazthenewestapp/../_Arrays.kt","webpack://hazthenewestapp/../_Collections.kt","webpack://hazthenewestapp/../LinkedHashSet.kt","webpack://hazthenewestapp/../Sets.kt","webpack://hazthenewestapp/../collections.kt","webpack://hazthenewestapp/../Standard.kt","webpack://hazthenewestapp/../_ArraysJs.kt","webpack://hazthenewestapp/../ArraySorting.kt","webpack://hazthenewestapp/../dynamic.kt","webpack://hazthenewestapp/../Preconditions.kt","webpack://hazthenewestapp/../Iterators.kt","webpack://hazthenewestapp/../_Ranges.kt","webpack://hazthenewestapp/../_Sequences.kt","webpack://hazthenewestapp/../_Strings.kt","webpack://hazthenewestapp/../string.kt","webpack://hazthenewestapp/../AbstractList.kt","webpack://hazthenewestapp/../AbstractMap.kt","webpack://hazthenewestapp/../Collections.kt","webpack://hazthenewestapp/../Iterables.kt","webpack://hazthenewestapp/../Maps.kt","webpack://hazthenewestapp/../MutableCollections.kt","webpack://hazthenewestapp/../ReversedViews.kt","webpack://hazthenewestapp/../Sequences.kt","webpack://hazthenewestapp/../HashSet.kt","webpack://hazthenewestapp/../Comparisons.kt","webpack://hazthenewestapp/../Ranges.kt","webpack://hazthenewestapp/../Appendable.kt","webpack://hazthenewestapp/../Char.kt","webpack://hazthenewestapp/../char.kt","webpack://hazthenewestapp/../Indent.kt","webpack://hazthenewestapp/../Strings.kt","webpack://hazthenewestapp/../StringBuilderJs.kt","webpack://hazthenewestapp/../StringNumberConversions.kt","webpack://hazthenewestapp/../numberConversions.kt","webpack://hazthenewestapp/../stringsCode.kt","webpack://hazthenewestapp/../Duration.kt","webpack://hazthenewestapp/../long.kt","webpack://hazthenewestapp/../Tuples.kt","webpack://hazthenewestapp/../ProgressionIterators.kt","webpack://hazthenewestapp/../Progressions.kt","webpack://hazthenewestapp/../progressionUtil.kt","webpack://hazthenewestapp/../primitiveCompanionObjects.kt","webpack://hazthenewestapp/../kotlinHacks.kt","webpack://hazthenewestapp/../AbstractMutableCollection.kt","webpack://hazthenewestapp/../AbstractMutableList.kt","webpack://hazthenewestapp/../AbstractMutableMap.kt","webpack://hazthenewestapp/../AbstractMutableSet.kt","webpack://hazthenewestapp/../ArrayList.kt","webpack://hazthenewestapp/../Library.kt","webpack://hazthenewestapp/../HashMap.kt","webpack://hazthenewestapp/../InternalHashCodeMap.kt","webpack://hazthenewestapp/../LinkedHashMap.kt","webpack://hazthenewestapp/../console.kt","webpack://hazthenewestapp/../ItemArrayLike.kt","webpack://hazthenewestapp/../math.kt","webpack://hazthenewestapp/../JsClass.kt","webpack://hazthenewestapp/../KClassImpl.kt","webpack://hazthenewestapp/../primitives.kt","webpack://hazthenewestapp/../reflection.kt","webpack://hazthenewestapp/../_WhitespaceChars.kt","webpack://hazthenewestapp/../CharCode.kt","webpack://hazthenewestapp/../_DigitChars.kt","webpack://hazthenewestapp/../regex.kt","webpack://hazthenewestapp/../DurationUnit.kt","webpack://hazthenewestapp/../UShort.kt","webpack://hazthenewestapp/../Enum.kt","webpack://hazthenewestapp/../arrays.kt","webpack://hazthenewestapp/../bitUtils.kt","webpack://hazthenewestapp/../charSequence.kt","webpack://hazthenewestapp/../numberConversion.kt","webpack://hazthenewestapp/../<js-code>","webpack://hazthenewestapp/../collectionsHacks.kt","webpack://hazthenewestapp/../compareTo.kt","webpack://hazthenewestapp/../coreRuntime.kt","webpack://hazthenewestapp/../typeCheckUtils.kt","webpack://hazthenewestapp/../hacks.kt","webpack://hazthenewestapp/../longjs.kt","webpack://hazthenewestapp/../numbers.kt","webpack://hazthenewestapp/../misc.kt","webpack://hazthenewestapp/../rangeTo.kt","webpack://hazthenewestapp/../exceptions.kt","webpack://hazthenewestapp/../jsOperators.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/api.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/attributes.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/delegating-map.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/finalize-consumer.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-attr-traits.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-enums.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-b.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-d.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-f.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-h.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-i.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-l.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-p.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tags-t.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/htmltag.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/jsMain/kotlin/dom-js.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/jsMain/kotlin/generated/gen-event-attrs-js.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/jsMain/kotlin/visit-js.kt","webpack://hazthenewestapp/../src/main/kotlin/DataTypes.kt","webpack://hazthenewestapp/../src/main/kotlin/Logic.kt","webpack://hazthenewestapp/../src/main/kotlin/OutputTexts.kt","webpack://hazthenewestapp/../src/main/kotlin/Utilities.kt","webpack://hazthenewestapp/../noPackageHacks.kt","webpack://hazthenewestapp/../src/main/kotlin/client.kt","webpack://hazthenewestapp/../org.w3c.dom.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/jsMain/kotlin/generated/gen-consumer-tags-js.kt","webpack://hazthenewestapp/../RegexExtensions.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-tag-unions.kt","webpack://hazthenewestapp/../AbstractCollection.kt","webpack://hazthenewestapp/../AbstractSet.kt","webpack://hazthenewestapp/../Unit.kt","webpack://hazthenewestapp/../EqualityComparator.kt","webpack://hazthenewestapp/../InternalMap.kt","webpack://hazthenewestapp/../Z:/buildAgent/work/ebbae481da7e109e/src/commonMain/kotlin/generated/gen-attributes.kt","webpack://hazthenewestapp/webpack/bootstrap","webpack://hazthenewestapp/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","Date","firstStartTime","entries","listOf","getTime","isDam","Duration","toMutableList","i","fixedDurations","addIndicesToFixedDurations","println","istimrar","isPregnancy","addStartDateToFixedDurations","endDateOfFixedDuration","pregnancy","markAllTuhrsInPregnancyAsHaml","removeTuhrLessThan15","removeTuhrLessThan15InPregnancy","removeDamLessThan3","dealWithBiggerThan10Dam","durations","inputtedAadatHaz","inputtedAadatTuhr","addDurationsToDams","addWiladat","addStartOfPregnancy","generateOutputStringPregnancy","isDateOnly","startDateOfHaml","endDateOfHaml","newDuration","timeInHaml","newFixedDuration","addTimeToDate","firstDuration","secondDuration","secondFixedDuration","thirdDuration","thirdFixedDuration","markAllDamsInPregnancyAsHaml","birthDate","fortyPlusBD","makeAllDamInFortyAfterWiladatAsMuttasil","istihazaAfter","nifasInfo","BiggerThanFortyNifas","dealWithDamInMuddateNifas","index","englishStr","hazDatesList","getHaizDatesList","outputStringHeaderLine","outputStringSumOfIndicesLine","outputStringIstihazaAfterLine","outputStringBiggerThan10Hall","urduStr","str","outputStringUrduHeaderLine","outputStringUrduBiggerThan10Hall","outputStringUrduFinalLines","generateUrduOutputString","OutputTexts","generateHazDatesStr","generateOutputString","date","fixedDuration","aadatHaz","aadatTuhr","window","alert","aadatNifas","dealWithIstihazaAfter","fiveSoortain","mp","gp","dm","hz","BiggerThanTenDm","hall","threeSoortainIstimrar","returnAadatHaiz","remainder","soorat","istihazaBefore","haiz","veryBigArbitraryNumber","aadatTuhrChanges","FiveSoortainOutput","istihazaBeforeStartDate","haizStartDate","istihazaAfterStartDate","aadatTuhrEndDate","aadatHaizEndDate","quotient","aadatTuhrStartDate","j","lastHaiz","duration","mustabeen","birthTime","outputStringUrduBiggerThan40Hall","urduDateFormat","generateUrduOutputStringPregnancy","entry","parseDate","strUrdu","aadatHaiz","toString","daysHoursMinutesDigitalUrdu","outputStringUrduAadatLine","filHaalPakiStr","filHaalHaizStr","outputStringUrduFilHaalLine","endDateOfBleeding","askAgainDate","outputStringUrduAskAgainLine","outputString","sd","et","daysHoursMinutesDigital","sum","removePrefix","qism","istihazaAfterEndDate","ed","difference","block","onFinalize","createTree","ownerDocument","insertSiblingRelative","querySelector","id","parentElement","asList","children","dateTimeLocalInputWithFallbackGuidelines","classes","toDuration","getTimezoneOffset","letterToTrimFrom","toDateInputString","dateString","offsetLocalTimeToUtc","parseToLocalDate","value","timeInMilliseconds","input","days","toInt","sections","getOrNull","hours","minutes","seconds","totalMinutes","numberOfMilliseconds","remainingHours","round","strHours","strMinutes","strDays","returnStatement","hoursStr","dateStr","dropLast","toUTCString","minutesStr","ampm","date2","date1","day","getUTCDate","urduMonth","getUTCMonth","urduDay","getUTCHours","getUTCMinutes","document","getElementById","getChildById","checked","haizDatesList","undefined","rows","append","remove","after","setupFirstRow","inputContainerToCopyFrom","validityRange","parseDays","message","setCustomValidity","pregnancyTimeInput","isDateOnlyLayout","minTimeInput","maxTimeInput","timeInputToCopyFrom","setMaxToCurrentTimeForTimeInputs","inputContainer","first","inputDatesRows","updateRemoveButtonDisabledStateForFirstRow","row","ensureAddFirstButtonOnlyShownInFirstRow","currentTimeString","asReversed","currentTime","timeInputs","min","max","previousTimeInputs","take","nextTimeInputs","drop","previousTimeInput","nextTimeInput","findInputContainer","event","findRow","indexWithinRow","flatten","convertInputValue","dateInputType","newValue","newMin","newMax","valueAsNumber","appendCompareButtonIfNeeded","dateTypeList","primaryHaizDatesList","secondaryHaizDatesList","counter","outputList","dateType","startTime","endTime","type","partial","child","before","node","addInputLayout","body","setupRows","addEventListener","headers","toggleSecondaryInputsContainer","trimIndent","inputFormDiv","compareResults","inputForm","content","parseEntries","dateConfigurationRadioButtons","aadatInputs","pregnancyCheckBox","mustabeenCheckBox","pregnancyStartTimeInput","pregnancyEndTimeInput","haizDatesInputTable","istimrarCheckBox","calculateButton","onClickDateConfigurationRadioButton","currentTarget","validateAadat","inputRow","timeInput","addRemoveButtonsTableData","addButton","removeButton","setMinMaxForTimeInputsOnInput","rowIndex","startDateIndex","endDateIndex","updateMinMaxForTimeInputsBeforeRemovingRow","addBeforeButton","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"mappings":"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sB,gBAoDJ,sB,4DC9ImB,cAA7B,qB,cAwCgB,c,cAdP,cACpB,gB,eAgDb,EAAO,kBAAQ,G,eC7ElB,OAPmD,U,oCAAS,c,qCC4TrD,EAAI,IAAO,EACJ,KAAW,MAAM,IAvBuC,EAAnB,KAAW,MAyBzC,IACC,GAAK,EADZ,EArCmC,KAAW,KAsCb,G,qBCtTP,OAA7B,aAAuB,GAAvB,EAAuB,0B,8BCfhC,e,mBA+BA,aAAc,GAFd,wBACA,2B,qBAcgC,aAAoB,QAClB,2B,qEA1ByB,aAAc,G,MhDJzB,EAAnB,EAAmB,WAAyB,EAAX,MAAd,EAAc,KAAd,EAAc,WgDKiB,qB,wVhDnB9C,OiDClB,wBAA8D,O,EAAM,O,kDjDI3E,OiDDU,2BAAiE,S,iBAAS,O,iDAAA,IAGzE,wB,MjDEmF,QiDCnF,4BAAmE,U,iBAAU,O,iDAAA,I,MjDIvD,OiDDzB,yBAA+D,O,iBAAO,O,iDAAA,I,MjDK7D,OiDFR,0BAAgE,Q,iBAAQ,O,iDAAA,I,MjDM9D,OiDHZ,wBAA8D,M,iBAAM,O,iDAAA,I,MjDQ7D,OiDLL,0BAAgE,Q,iBAAQ,O,iDAAA,I,MjDWrF,OiDRc,2BAAiE,S,iBAAS,O,iDAAA,I,MjDWE,MiDR7E,0BAAkE,Q,iBAAQ,O,iDAAA,I,MjDQmJ,OiDL5N,2BAAiE,S,iBAAS,O,iDAAA,I,MjDKsS,MiDF7W,8BAAmE,Y,iBAAY,O,iDAAA,I,MjDEgc,MiDC5gB,iCAAsE,e,iBAAe,O,iDAAA,I,MjDD4lB,YiDIprB,8BAAyE,Y,iBAAY,O,iDAAA,I,MjDJiwB,UiDOt1B,8BAAuE,Y,iBAAY,O,iDAAA,I,MjDPq6B,WiDUv/B,+BAAyE,a,iBAAa,O,iDAAA,I,MjDVmkC,WiDa3pC,6BAAuE,W,iBAAW,O,iDAAA,I,MjDbuuC,MiDgBxzC,8BAAmE,Y,iBAAY,O,iDAAA,I,MjDhBu4C,aiDmBr9C,+BAA2E,a,iBAAa,O,iDAAA,I,MjDnBuiD,aiDsB9nD,gCAA4E,c,iBAAc,O,iDAAA,I,eCzDjH,OAAW,MAAY,QAAQ,G,YAQwD,I,SAAT,EAAS,Q,KACvF,E,EAAK,GAAW,EAAS,I,WACzB,E,ElDCY,K,gBAEH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BAAsB,SAAS,KACvF,O7CJ2E,mBAGhF,KAAK,I,mOgDVa,qB,gCAOV,OAAO,a,IAA0B,4BAAU,EAAM,sB,iCAItB,mC,EAAY,MAAZ,EAAY,QAAZ,GAA2B,OAA3B,QAA0B,EAA1B,G,iCAI3B,MAAQ,SAAO,8B,4GAkBX,a,MACS,yBAAN,KAAa,IAAU,wBAAmB,EAAM,kB,8CAGH,OAAf,uB,0HAQhC,yB,0CAKG,MAAM,GAA+B,gD,gCAES,OAAd,IAAU,M,iCAEtB,OAAD,G,2GAS2B,OAAd,IAAU,M,iCAEtB,OAAD,G,oHA7CtB,2B,mHClB4E,c,kLAGS,c,kLAMI,qC,kLAGV,oC,kLAGG,oC,kLAGN,oC,kLAGM,oC,kLAGG,oC,kLAGD,uB,kLAGC,oC,kLAGQ,2B,kLAGS,mBiBkEhE,G,EjBlEgE,IiBkEhC,iBAAhB,EAAE,Q,yLjB/D2C,mBiBkEhE,G,EjBlEgE,IiBkEhC,cAAhB,EAAE,Q,yLjB/D4C,gBiB6D9D,GjB7D8D,EiB6D9C,Y,kLjB1DkD,gBiB2DjE,GjB3DiE,EiB2DjD,a,kLjBxD2C,gBiB0D7D,GjB1D6D,EiB0D7C,a,kLjBvD2C,mBiB0D1D,G,EjB1D0D,IiB0D1B,cAAhB,EAAE,Q,yLjBvDkD,gBiBqDnE,GjBrDmE,EiBqDnD,e,kLjBlDsD,gBiBmDrE,GjBnDqE,EiBmDrD,e,kLjB7CnB,MAAkB,mBAAT,GjD5B4/D,EiD4Bv9D,SAAW,c,oLA/DpG,uB,+CAGA,0B,gDAGA,2B,gDAGA,2B,6CAGA,wB,8CAGA,yB,4CAGA,uB,8CAGA,yB,+CAGA,0B,8CAGA,yB,+CAGA,0B,kDAGA,6B,qDAGA,gC,kDAGA,6B,kDAGA,6B,mDAGA,8B,iDAGA,4B,kDAGA,6B,mDAGA,8B,oDAGA,+B,iDAIW,EAAoB,G,GAApB,Q,KACH,EAAa,OjD3Bg5D,SiD2Bh1D,WAAS,G,EACrD,U,4CjD5BsjE,EiD6B3jE,GAAS,E,EACrC,O,EAJG,EAAP,U,21E1B3CiC,OvBIhC,auBJ0B,Q,2ClBKgB,e,KAAiB,GAkG5C,GAlG4C,GAkG9B,OAlGuC,MAAM,GAClF,UACI,EAAK,aAAW,yBAAM,KkBJ2E,OlBoGr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","file":"hazthenewestapp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hazthenewestapp\"] = factory();\n\telse\n\t\troot[\"hazthenewestapp\"] = factory();\n})(this, function() {\nreturn ",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import kotlin.js.Date\n\ndata class Entry(\n    val startTime: Date,\n    val endTime: Date\n)\n\ndata class Pregnancy(\n    val pregStartTime:Date,\n    val birthTime:Date,\n    var aadatNifas:Double? = 40.0,\n    val mustabeenUlKhilqat:Boolean\n)\n\nenum class DurationType {\n    DAM, TUHR, TUHREFAASID, ISTIMRAR, TUHR_IN_HAML, NIFAAS, DAM_IN_HAML, DAM_IN_NIFAAS_PERIOD, ISTIHAZA_BEFORE,ISTIHAZA_AFTER,HAIZ, HAML,WILADAT_ISQAT\n}\nenum class Soortain {\n    A_1, A_2, A_3, B_2, B_3\n}\n\ndata class Duration(\n    val type: DurationType,\n    val timeInMilliseconds: Long,\n    val startTime: Date\n) {\n    val days: Double get() = timeInMilliseconds / MILLISECONDS_IN_A_DAY.toDouble()\n    val endDate: Date get() = Date(startTime.getTime().toLong() + (timeInMilliseconds))\n\n}\n\ndata class FixedDuration(\n    var type: DurationType,\n    var timeInMilliseconds: Long,\n    var indices: MutableList<Int> = mutableListOf(),\n    var istihazaAfter: Long = 0,\n    var biggerThanTen: BiggerThanTenDm? = null,\n    var biggerThanForty: BiggerThanFortyNifas? = null,\n    var startDate: Date = Date(1,1,1),\n) {\n    val days: Double get() = timeInMilliseconds / MILLISECONDS_IN_A_DAY.toDouble()\n    val endDate: Date get() = Date(startDate.getTime().toLong() + (timeInMilliseconds))\n}\n\ndata class BiggerThanTenDm(\n    var mp: Long, //mawjooda paki\n    var gp: Long, //aadat of Tuhr before solving this\n    var dm: Long, //dam\n    var hz: Long, //aadat of haiz before solving this\n    var qism: Soortain, //name of that case A-1, A-2, A-3, B-2, B-3\n    var istihazaBefore: Long, //number of days of istihaza before haiz\n    var haiz:Long, //number of days of haiz\n    var istihazaAfter: Long, //number of days of istihaza after haiz\n    var aadatHaiz:Long, //aadat of haiz after solving this\n    var aadatTuhr:Long, //aadat of tuhur after solving this\n    var durationsList: MutableList<Duration>\n\n)\ndata class BiggerThanFortyNifas(\n    var nifas: Long, //muddate nifas\n    var istihazaAfter: Long, //number of days of istihaza after nifas\n    var aadatHaiz:Long, //aadat of haiz before solving this\n    var aadatTuhr:Long, //aadat of tuhur before solving this\n    var durationsList: MutableList<Duration>\n)\n\ndata class IstihazaAfterOutput(\n    var aadatHaiz: Long,\n    var haizDatesEntries: MutableList<Entry>\n)","import kotlinx.browser.window\nimport kotlin.js.Date\n\n//output line 1 is indices of all the things durations that make up the sum of this thingy.\n// we should only write it, if there is more than one index\n//output line 2 is printing if an istihaza after was added too. it contains amount of istihazaAfter\n//output line 3 is mp,gp, dm, hz, soorat, as well as istihazaBefore, Haiz, IstihazaAfter, and AadatHaiz/AaadatTuhr\n// at the end of it.\n//output line 3, can be used to generate the daur lines.\n//After this should come output in dates:\n//if we passed dateTime at the start of this thingy, we could use\n// istihazaBefore, Haiz, and IstihazaAfter to generate them\n// and generate daur too\n\nlateinit var firstStartTime:Date\n\nfun handleEntries(entries: List<Entry>, istimrar:Boolean, inputtedAadatHaz:Double?, inputtedAadatTuhr:Double?, isDateOnly:Boolean, isPregnancy: Boolean, pregnancy: Pregnancy): OutputTexts {\n    firstStartTime = entries[0].startTime\n    val times = entries\n        .flatMap { entry -> listOf(entry.startTime, entry.endTime) }\n        .map { it.getTime().toLong() }\n    require(times == times.sorted())\n    //step 1 - create an array of dam and tuhur durations\n    var isDam = true\n    val durations = times.zipWithNext { firstTime, secondTime ->\n        val type = if (isDam) DurationType.DAM else DurationType.TUHR\n        isDam = !isDam\n        Duration(type, secondTime - firstTime, Date(firstTime))\n    }\n    val fixedDurations = durations\n        .map { duration ->\n            FixedDuration(duration.type, duration.timeInMilliseconds,startDate = duration.startTime)\n        }\n        .toMutableList()\n    addIndicesToFixedDurations(fixedDurations)\n    println(\"This is the raw fixedDurations after adding indices: ${fixedDurations}\")\n\n    if(istimrar==true){//make the last period an istimrar type\n        fixedDurations[fixedDurations.size-1].type=DurationType.ISTIMRAR;\n    }\n    if(isPregnancy==true){\n        addStartDateToFixedDurations(fixedDurations)\n\n        markAllTuhrsInPregnancyAsHaml(fixedDurations, pregnancy)\n        //the above also added start of pregnancy\n\n        if(pregnancy.mustabeenUlKhilqat==false){\n            //if it's not mustabeen ulkhilqat, deal with it like haiz\n            removeTuhrLessThan15(fixedDurations)\n            removeTuhrLessThan15InPregnancy(fixedDurations)\n            removeDamLessThan3(fixedDurations)\n            addStartDateToFixedDurations(fixedDurations)\n            dealWithBiggerThan10Dam(fixedDurations, durations, inputtedAadatHaz,inputtedAadatTuhr)\n            addDurationsToDams(fixedDurations)\n            addWiladat(fixedDurations, pregnancy)\n            addStartOfPregnancy(fixedDurations, pregnancy)\n            return generateOutputStringPregnancy(fixedDurations, durations, isDateOnly, pregnancy)\n        }else{         //it is mustabeen ul khilqat\n            //mark all dam in pregnancy as isithaza.\n            markAllDamsInPregnancyAsHaml(fixedDurations, pregnancy)\n            removeTuhrLessThan15(fixedDurations)//do this before the next, cuz why not, mkes thigns simpler in joining dams\n            addStartDateToFixedDurations(fixedDurations)//cuz the last shoulda messed it up\n            makeAllDamInFortyAfterWiladatAsMuttasil(fixedDurations,pregnancy) //also, marking them as Dam in\n            dealWithDamInMuddateNifas(fixedDurations,pregnancy)\n            removeDamLessThan3(fixedDurations) //this won't effect dam in muddat e haml\n            addStartDateToFixedDurations(fixedDurations)\n            dealWithBiggerThan10Dam(fixedDurations, durations, inputtedAadatHaz,inputtedAadatTuhr)\n            addDurationsToDams(fixedDurations)\n            addWiladat(fixedDurations, pregnancy)\n            addStartOfPregnancy(fixedDurations, pregnancy)\n            return generateOutputStringPregnancy(fixedDurations, durations, isDateOnly, pregnancy)\n        }\n    }else{//is not pregnancy\n        removeTuhrLessThan15(fixedDurations)\n        println(\"This is fixedDurations after removing less than 15T: ${fixedDurations}\")\n        removeDamLessThan3(fixedDurations)\n        println(\"This is fixedDurations after removing less than 3D: ${fixedDurations}\")\n        addStartDateToFixedDurations(fixedDurations)\n        println(\"Now we add start date: ${fixedDurations}\")\n        dealWithBiggerThan10Dam(fixedDurations, durations, inputtedAadatHaz,inputtedAadatTuhr)\n        println(\"After dealing with bigger than 10D: ${fixedDurations}\")\n        addDurationsToDams(fixedDurations)\n        return generateOutputString(fixedDurations, durations, isDateOnly)\n    }\n\n    return generateOutputString(fixedDurations, durations, isDateOnly)\n\n}\nfun dealWithDamInMuddateNifas(fixedDurations:MutableList<FixedDuration>,pregnancy:Pregnancy){\n    var i = 0\n    while (i<fixedDurations.size){\n        if(fixedDurations[i].type==DurationType.DAM_IN_NIFAAS_PERIOD){\n            if(fixedDurations[i].timeInMilliseconds > 40*MILLISECONDS_IN_A_DAY){\n                //if nifas exceeded 40\n                if(pregnancy.aadatNifas==null){\n                    pregnancy.aadatNifas=40.0\n                }\n                var istihazaAfter = (fixedDurations[i].timeInMilliseconds-pregnancy.aadatNifas!!*MILLISECONDS_IN_A_DAY).toLong()\n                var nifasInfo = BiggerThanFortyNifas(pregnancy.aadatNifas!!.toLong()*MILLISECONDS_IN_A_DAY, istihazaAfter,-1, -1,\n                    mutableListOf<Duration>())\n                fixedDurations[i].biggerThanForty=nifasInfo\n\n//\n//                var secondDuration = (fixedDurations[i].timeInMilliseconds-pregnancy.aadatNifas!!*MILLISECONDS_IN_A_DAY).toLong()\n//                var newFixedDuration = FixedDuration(DurationType.DAM,secondDuration, startDate = addTimeToDate(fixedDurations[i].startDate, pregnancy.aadatNifas.toLong()))\n//                fixedDurations[i].timeInMilliseconds=pregnancy.aadatNifas.toLong()*MILLISECONDS_IN_A_DAY\n//                fixedDurations.add(i+1,newFixedDuration)\n\n                //break it up into dam and tuhr?\n                //maybe do that later in bigger than 10\n                //as that is the only way to get aadat.\n                break;\n            }else{//it is 40 or less\n                //do nothing to this. don't even bother to update aadat.\n                //maybe update aadat? if it's working, why fix?\n            }\n        }\n\n        i++\n    }\n}\n\nfun makeAllDamInFortyAfterWiladatAsMuttasil(fixedDurations:MutableList<FixedDuration>,pregnancy:Pregnancy){\n    var birthDate:Long = pregnancy.birthTime.getTime().toLong()\n    var fortyPlusBD = birthDate+(40*MILLISECONDS_IN_A_DAY)\n    var i = 0\n    while (i<fixedDurations.size){\n        var startTime = fixedDurations[i].startDate.getTime()\n        if(fixedDurations[i].startDate.getTime()>=birthDate &&\n                fixedDurations[i].startDate.getTime()<=fortyPlusBD &&\n                fixedDurations[i].type == DurationType.DAM){\n            //if a dam starts after or at birth, and before or at 40\n            //then check the dam before it if it exists, is it in nifaas period.\n            if(i>1 && fixedDurations[i-2].type==DurationType.DAM_IN_NIFAAS_PERIOD){\n                //if it is, then extend last Dam to cover this one\n                fixedDurations[i-2].timeInMilliseconds += fixedDurations[i-1].timeInMilliseconds + fixedDurations[i].timeInMilliseconds\n                fixedDurations[i-2].indices.addAll(fixedDurations[i-1].indices)\n                fixedDurations[i-2].indices.addAll(fixedDurations[i].indices)\n                fixedDurations.removeAt(i-1)\n                fixedDurations.removeAt(i-1)\n                i -= 2\n            }else{//there is no dam before this in nifas period\n                var newDuration:Long = fixedDurations[i].startDate.getTime().toLong()-birthDate\n                fixedDurations[i].startDate=pregnancy.birthTime\n                fixedDurations[i].timeInMilliseconds += newDuration\n                fixedDurations[i].type = DurationType.DAM_IN_NIFAAS_PERIOD\n                //since we added time to this one, we gotta subtract it from the one before.\n                //if it exists\n                if(i>0){\n                    fixedDurations[i-1].timeInMilliseconds-=newDuration\n                }\n            }\n        }\n        if(fixedDurations[i].startDate.getTime()>fortyPlusBD){\n            break;\n        }\n        i++\n    }\n}\n\n\nfun markAllTuhrsInPregnancyAsHaml(fixedDurations: MutableList<FixedDuration>, pregnancy:Pregnancy){\n    println(\"In marking Tuhrs as Tuhr in pregnancy\")\n    for (i in fixedDurations.indices){\n  //      println(\"1\")\n        var endDateOfFixedDuration = fixedDurations[i].endDate\n  //      println(\"2\")\n//        println(\"type is ${fixedDurations[i].type}\")\n//        println(\"startDate is ${fixedDurations[i].startDate}\")\n//        println(\"endDate is ${endDateOfFixedDuration}\")\n//        println(\"birthtime is ${pregnancy.birthTime}\")\n\n        if(fixedDurations[i].type == DurationType.TUHR &&\n            fixedDurations[i].startDate.getTime() < pregnancy.birthTime.getTime() &&\n            endDateOfFixedDuration.getTime() > pregnancy.pregStartTime.getTime()){\n            println(\"3\")\n\n            fixedDurations[i].type = DurationType.TUHR_IN_HAML\n            println(\"4\")\n\n        }\n    }\n    println(\"passed this\")\n}\n\nfun markAllDamsInPregnancyAsHaml(fixedDurations: MutableList<FixedDuration>, pregnancy:Pregnancy){\n    var i =0\n    val startDateOfHaml = pregnancy.pregStartTime.getTime().toLong()\n    val endDateOfHaml = pregnancy.birthTime.getTime().toLong()\n\n    while(i<fixedDurations.size){\n        var endDateOfFixedDuration = fixedDurations[i].endDate\n\n        //this dam started before pregnancy, ends in the middle of pregnancy\n        //  ---(pregnancy---  birth)\n        if(fixedDurations[i].type == DurationType.DAM &&\n                fixedDurations[i].startDate.getTime()<startDateOfHaml &&\n                endDateOfFixedDuration.getTime()>startDateOfHaml &&\n                endDateOfFixedDuration.getTime()<=endDateOfHaml){\n            println(\"We got choice a\")\n            //mark the portion in pregnancy as dam in haml. we're gonna have to make more dam???\n            //or, we could just shorten it to prepregnancy stae, and leave it as is. who cares about dam in haml?\n            //we can even put it in istihazaAfter.\n            //maybe that's a bad idea, as it could trigger daur...\n            //for now, we are just shortening it.\n            var newDuration = startDateOfHaml - fixedDurations[i].startDate.getTime().toLong()\n            var timeInHaml = fixedDurations[i].timeInMilliseconds-newDuration\n            fixedDurations[i].timeInMilliseconds = newDuration\n            //maybe we really should leave an istihaz after here????\n            //we gotta figure out what to do with indices here\n            var newFixedDuration:FixedDuration = FixedDuration(DurationType.DAM_IN_HAML,timeInHaml, startDate = addTimeToDate(fixedDurations[i].startDate, newDuration))\n            fixedDurations.add(i+1, newFixedDuration)\n        }\n        //this started in the middle, ended in the middle of it\n        //  (pregnancy ---- birth)\n        if(fixedDurations[i].type == DurationType.DAM &&\n                    endDateOfFixedDuration.getTime() <= endDateOfHaml &&\n                    fixedDurations[i].startDate.getTime() >= startDateOfHaml\n            ){\n            println(\"We got choice b\")\n\n            //mark it as dam in haml, aka, istihaza.\n            fixedDurations[i].type = DurationType.DAM_IN_HAML\n        }\n        //this starts in the middle of pregnancy, ends after it.\n        // (pregnancy   ---birth)---\n        if(fixedDurations[i].type == DurationType.DAM &&\n                    fixedDurations[i].startDate.getTime()<endDateOfHaml &&\n                    fixedDurations[i].startDate.getTime()>=startDateOfHaml &&\n                    endDateOfFixedDuration.getTime()>endDateOfHaml\n                ){\n            println(\"We got choice c\")\n            println(\"End date of haml is ${Date(endDateOfHaml)}\")\n            println(\"this fd start time is ${fixedDurations[i].startDate}\")\n\n            var firstDuration = pregnancy.birthTime.getTime().toLong()-fixedDurations[i].startDate.getTime().toLong()\n            var secondDuration = fixedDurations[i].timeInMilliseconds-firstDuration\n            var secondFixedDuration:FixedDuration = FixedDuration(DurationType.DAM,secondDuration, startDate = pregnancy.birthTime)\n            fixedDurations.add(i+1,secondFixedDuration)\n            fixedDurations[i].timeInMilliseconds = firstDuration\n            fixedDurations[i].type=DurationType.DAM_IN_HAML\n\n        }\n        //this started before pregnancy began, ends after pregnancy ended\n        //  ---(pregnancy----birth)---\n        if(fixedDurations[i].type == DurationType.DAM &&\n                fixedDurations[i].startDate.getTime()<startDateOfHaml &&\n                endDateOfFixedDuration.getTime()>endDateOfHaml){\n            //make 1 at the start, one at the end, and 1 in the middle\n            var firstDuration = startDateOfHaml-fixedDurations[i].startDate.getTime().toLong()\n            var secondDuration = endDateOfHaml-startDateOfHaml\n            var thirdDuration = fixedDurations[i].timeInMilliseconds-firstDuration-secondDuration\n\n            var secondFixedDuration:FixedDuration = FixedDuration(DurationType.DAM_IN_HAML,secondDuration, startDate = pregnancy.pregStartTime)\n            var thirdFixedDuration:FixedDuration = FixedDuration(DurationType.DAM,thirdDuration, startDate = pregnancy.birthTime)\n            fixedDurations.add(i+1, secondFixedDuration)\n            fixedDurations.add(i+2, thirdFixedDuration)\n            fixedDurations[i].timeInMilliseconds=firstDuration\n\n\n        }\n\n        i++\n    }\n}\n\n\nfun addStartDateToFixedDurations(fixedDurations: MutableList<FixedDuration>){\n    var date:Date = firstStartTime\n    for (fixedDuration in fixedDurations){\n        fixedDuration.startDate = date\n        date = addTimeToDate(date,fixedDuration.timeInMilliseconds)\n    }\n}\nfun addIndicesToFixedDurations(fixedDurations: MutableList<FixedDuration>){\n    //this is so we can know the indics comparison between duration and fixed duration\n    var i =0\n    while(i<fixedDurations.size){\n        fixedDurations[i].indices.add(i)\n        i++\n    }\n}\n\nfun removeTuhrLessThan15InPregnancy (fixedDurations: MutableList<FixedDuration>){\n    var i=0\n    while(i < fixedDurations.size){//iterate through durations\n        //if there is a tuhr less than 15\n        if(fixedDurations[i].days<15 && fixedDurations[i].type== DurationType.TUHR_IN_HAML){\n            //it must be surrounded by dams on either side. increase size of damBefore. delete tuhr and dam after\n            fixedDurations[i-1].timeInMilliseconds += fixedDurations[i].timeInMilliseconds + fixedDurations[i+1].timeInMilliseconds\n            fixedDurations[i-1].indices.addAll(fixedDurations[i].indices)\n            fixedDurations.removeAt(i)\n            fixedDurations[i-1].indices.addAll(fixedDurations[i].indices)\n            fixedDurations.removeAt(i)\n        } else {\n            i++\n        }\n    }\n}\n\n\n//step 2 - Remove tuhr-e-naaqis (less than 15 days):\n//          iterate through array. if we find a tuhur less than 15, it must be surrounded\n//          by dam. add all 3 duration values together, delete the originals, and set type as dam.\n//          We want to keep the original list. Perumably the unflattened one will remain.\n\n\nfun removeTuhrLessThan15 (fixedDurations: MutableList<FixedDuration>){\n    var i=0\n    while(i < fixedDurations.size){//iterate through durations\n        //if there is a tuhr less than 15\n        if(fixedDurations[i].days<15 && fixedDurations[i].type== DurationType.TUHR){\n            //it must be surrounded by dams on either side. increase size of damBefore. delete tuhr and dam after\n            fixedDurations[i-1].timeInMilliseconds += fixedDurations[i].timeInMilliseconds + fixedDurations[i+1].timeInMilliseconds\n            fixedDurations[i-1].indices.addAll(fixedDurations[i].indices)\n            fixedDurations.removeAt(i)\n            fixedDurations[i-1].indices.addAll(fixedDurations[i].indices)\n            fixedDurations.removeAt(i)\n        } else {\n            i++\n        }\n    }\n}\n\n//step 3 - Remove dam less than 3\n//          iterate through array. when we find a dam less than 3, check if\n//          there is a tuhur behind it. and in front of it. if there is then add all the 3 durations\n//          together. set type as a new type tuhr-e-faasid. delete the originals.\nfun removeDamLessThan3 (fixedDurations: MutableList<FixedDuration>){\n    var i=0\n    while (i<fixedDurations.size-1){\n        if(fixedDurations[i].type==DurationType.DAM && fixedDurations[i].days<3){\n            if(i>0){//there is tuhur behind this and in front of it\n                if(fixedDurations[i-1].type==DurationType.TUHR){//if there is one behind it\n                    fixedDurations[i-1].type = DurationType.TUHREFAASID\n                    fixedDurations[i-1].timeInMilliseconds += fixedDurations[i].timeInMilliseconds\n                    fixedDurations[i-1].indices.addAll(fixedDurations[i].indices)\n\n                    if(fixedDurations[i+1].type==DurationType.TUHR){\n                        fixedDurations[i-1].timeInMilliseconds += fixedDurations[i+1].timeInMilliseconds\n                        fixedDurations[i-1].indices.addAll(fixedDurations[i+1].indices)\n                        fixedDurations.removeAt(i+1)\n\n                    }\n                    fixedDurations.removeAt(i)\n                    i--\n                }\n            }\n        }\n        i++\n    }\n}\n//step 4 - Deal with bigger than 10 dam\n//          iterate through array. getting aadat on the way. each time you encounter a dam\n//          less than 10, update it into HazAadat. each time you encounter a tuhur\n//          (not a tuhr-e-faasid), update it into aadat too.\n\nfun dealWithBiggerThan10Dam(fixedDurations: MutableList<FixedDuration>, durations: List<Duration>,inputtedAadatHaz: Double?,inputtedAadatTuhr: Double?){\n    var aadatHaz:Long = -1\n    var aadatTuhr:Long = -1\n\n    if (inputtedAadatHaz != null && inputtedAadatHaz>=3 && inputtedAadatHaz<=10){\n        aadatHaz = (inputtedAadatHaz * MILLISECONDS_IN_A_DAY).toLong()\n    }\n    if (inputtedAadatTuhr!= null && inputtedAadatTuhr>=15){\n        aadatTuhr = (inputtedAadatTuhr * MILLISECONDS_IN_A_DAY).toLong()\n    }\n\n    //now the aadaat are in milliseconds\n\n    for (i in fixedDurations.indices){\n        //iterate through fixedDurations\n\n        //get aadat if dam is less than 10\n        if(fixedDurations[i].type==DurationType.DAM && fixedDurations[i].days<=10){\n            aadatHaz = fixedDurations[i].timeInMilliseconds\n            if(i>0 && fixedDurations[i-1].type==DurationType.TUHR){\n                aadatTuhr = fixedDurations[i-1].timeInMilliseconds\n            }\n\n        }else if(fixedDurations[i].type==DurationType.DAM_IN_NIFAAS_PERIOD && fixedDurations[i].days>40){\n            //check if we have aadaat.\n            //we don't need mawjoodah paki\n            if(aadatHaz==(-1).toLong() ||aadatTuhr==(-1).toLong()){\n                //give error message\n                window.alert(\"We need both aadaat to be able to solve this\")\n                break\n            }\n\n            var istihazaAfter = fixedDurations[i].biggerThanForty!!.istihazaAfter\n            var aadatNifas = fixedDurations[i].biggerThanForty!!.nifas\n            var sd = addTimeToDate(fixedDurations[i].startDate,aadatNifas)\n            var nifasInfo = BiggerThanFortyNifas(aadatNifas, istihazaAfter,aadatHaz, aadatTuhr, mutableListOf<Duration>())\n            fixedDurations[i].biggerThanForty=nifasInfo\n\n            aadatHaz = dealWithIstihazaAfter(istihazaAfter,aadatHaz,aadatTuhr,fixedDurations, i,sdOfIstihazaAfter = sd)\n\n        }else if(fixedDurations[i].type==DurationType.DAM && fixedDurations[i].days>10){\n            //if we hit a dam bigger than 10, check to see if we have aadat\n            if(aadatHaz==(-1).toLong() ||aadatTuhr==(-1).toLong()){\n                //give error message\n                window.alert(\"We need both aadaat to be able to solve this\")\n                break\n            }else if(i<1){\n                //give error message\n                window.alert(\"We need at least one more period before this to be able to solve this\")\n                break\n            }\n            else{\n                val mp:Long = fixedDurations[i-1].timeInMilliseconds + fixedDurations[i-1].istihazaAfter\n                val gp:Long = aadatTuhr\n                val dm:Long = fixedDurations[i].timeInMilliseconds\n                val hz:Long = aadatHaz\n                val output:FiveSoortainOutput = fiveSoortain(mp, gp, dm, hz)\n                println(\"MP is ${mp}\")\n                println(\"GP is ${gp}\")\n                println(\"Dm is ${dm}\")\n                println(\"Hz is ${hz}\")\n                println(\"Soorat is ${output.soorat}\")\n                println(\"istihazaBefore is ${output.istihazaBefore}, haiz is ${output.haiz} and istihazaAfter is ${output.istihazaAfter}\")\n\n                //deal with output\n                //update aadats\n                aadatHaz = output.haiz\n                if(output.aadatTuhrChanges && fixedDurations[i-1].type==DurationType.TUHR){\n                    //if mp is not tuhrefaasid or tuhr in haml\n                    aadatTuhr = mp;\n                }\n                println(\"Aadat after this should be ${aadatTuhr}/${aadatHaz}\")\n                val hall =  BiggerThanTenDm(mp,gp,dm,hz, output.soorat, output.istihazaBefore,\n                    output.haiz, output.istihazaAfter, aadatHaz,aadatTuhr, mutableListOf<Duration>())\n                fixedDurations[i].biggerThanTen=hall\n\n                var sd = addTimeToDate(fixedDurations[i].startDate,(output.istihazaBefore+output.haiz))\n\n                aadatHaz = dealWithIstihazaAfter(output.istihazaAfter,aadatHaz,aadatTuhr,fixedDurations, i, sd)\n            }\n        }\n        if(fixedDurations[i].type==DurationType.ISTIMRAR) {//if the last period is an istimrar\n            //if we hit a dam bigger than 10, check to see if we have aadat\n            if (aadatHaz == (-1).toLong() || aadatTuhr == (-1).toLong()) {\n                //give error message\n                window.alert(\"We need both aadaat to be able to solve this\")\n                break\n            } else {\n                val veryBigArbitraryNumber = 1000;\n                val dm:Long = (veryBigArbitraryNumber*MILLISECONDS_IN_A_DAY)\n                val mp = fixedDurations[i - 1].timeInMilliseconds\n                val gp = aadatTuhr\n                val hz = aadatHaz\n                val output: FiveSoortainOutput = threeSoortainIstimrar(mp, gp, hz)\n                //update aadats\n                aadatHaz = output.haiz\n                if(output.aadatTuhrChanges && fixedDurations[i-1].type!=DurationType.TUHREFAASID){\n                    //if mp is not tuhrefaasid\n                    aadatTuhr = mp;\n                }\n                val hall =  BiggerThanTenDm(mp,gp,dm,hz, output.soorat, output.istihazaBefore,output.haiz, output.istihazaAfter, aadatHaz,aadatTuhr, mutableListOf<Duration>())\n                fixedDurations[i].biggerThanTen=hall\n            }\n        }\n    }\n}\n\nfun dealWithIstihazaAfter(istihazaAfter: Long, aadatHaz: Long, aadatTuhr: Long, fixedDurations: MutableList<FixedDuration>, i: Int, sdOfIstihazaAfter:Date):Long {\n    //if istihazaAfter is bigger than addatTuhr +3, run daur\n    var returnAadatHaiz = aadatHaz\n    if (istihazaAfter>=aadatTuhr+(3*MILLISECONDS_IN_A_DAY) && fixedDurations[i].type==DurationType.DAM){\n        //find  remainder\n\n        val remainder = istihazaAfter%(aadatHaz+aadatTuhr)\n\n        if (remainder<aadatTuhr + (3*MILLISECONDS_IN_A_DAY)){//it ended in tuhr or right between haz and tuhr\n            //add istihazaAfter to next Tuhur mark it as fasid\n            //if it exists\n            //if remainder is not equal to zero\n            if(i<fixedDurations.size-1 && remainder>0){//there is a tuhur after this\n                fixedDurations[i+1].type=DurationType.TUHREFAASID\n//                            fixedDurations[i+1].timeInMilliseconds+=(remainder*MILLISECONDS_IN_A_DAY).toLong()\n//                            fixedDurations[i].timeInMilliseconds-=(remainder*MILLISECONDS_IN_A_DAY).toLong()\n                fixedDurations[i+1].istihazaAfter=remainder\n            }\n\n        }else{//it ended in less than haiz\n            //change aadatHaiz\n            returnAadatHaiz = remainder-aadatTuhr\n\n        }\n\n    }else{\n        println(\"Istihaza After is smaller than aadatTuhr+3, not running daur\")\n\n        //else add istihazaAfter to next Tuhr, mark it as fasid\n        //if it exists\n        if(i<fixedDurations.size-1){\n            println(\"marking next tuhr as fasid, because there is istihaza at the end of this dam\")\n            fixedDurations[i+1].type=DurationType.TUHREFAASID\n            fixedDurations[i+1].istihazaAfter = istihazaAfter\n        }\n\n    }\n    return returnAadatHaiz\n}\n\nclass FiveSoortainOutput (\n    val soorat: Soortain,\n    val istihazaBefore: Long,\n    val haiz:Long,\n    val istihazaAfter: Long,\n    val aadatTuhrChanges:Boolean\n)\n\nfun threeSoortainIstimrar(mp:Long, gp:Long, hz: Long):FiveSoortainOutput{\n    val soorat: Soortain;\n    val istihazaBefore:Long;\n    val haiz:Long;\n    val istihazaAfter:Long;\n    val aadatTuhrChanges:Boolean; // 0 for gp, 1 for mp (change)\n    val veryBigArbitraryNumber = 1000;\n\n    if (mp <= gp) {    //Qism A (Always A-1 in istimrar)\n        soorat = Soortain.A_1;\n        istihazaBefore = gp-mp;\n        haiz = hz;\n        istihazaAfter = (veryBigArbitraryNumber*MILLISECONDS_IN_A_DAY)\n        aadatTuhrChanges = false;\n    }else {\t// mp>gp qism B\n        if (hz - (mp - gp) >= 3*MILLISECONDS_IN_A_DAY) {\t\t\t\t\t\t\t// soorat B-2\n            soorat = Soortain.B_2;\n            istihazaBefore = 0;\n            haiz = hz-(mp-gp);\n            istihazaAfter = (veryBigArbitraryNumber*MILLISECONDS_IN_A_DAY)\n            aadatTuhrChanges = true;\n        }else{ //if (hz - (mp - gp) < 3) {\t\t\t\t\t\t// soorat B-3\n            soorat = Soortain.B_3;\n            istihazaBefore = 0;\n            haiz = hz;\n            istihazaAfter = (veryBigArbitraryNumber*MILLISECONDS_IN_A_DAY)\n            aadatTuhrChanges = true;\n        }\n    }\n    return FiveSoortainOutput(soorat,istihazaBefore,haiz,istihazaAfter, aadatTuhrChanges)\n}\n\nfun fiveSoortain(mp: Long, gp: Long, dm: Long, hz:Long):FiveSoortainOutput{\n    val soorat: Soortain;\n    val istihazaBefore:Long;\n    val haiz:Long;\n    val istihazaAfter:Long;\n    val aadatTuhrChanges:Boolean; // 0 for gp, 1 for mp (change)\n\n    if (mp <= gp) {    //Qism A\n        if (hz <= dm - (gp - mp)) {\t                  // soorat A-1\n            // if GP==MP, we would output 0 istihaza, not good!\n            // 0 istihaza is ok, for now. just no negative numbers, please\n            soorat = Soortain.A_1;\n            istihazaBefore = gp-mp;\n            haiz = hz;\n            istihazaAfter = dm-(gp-mp)-hz;\n            aadatTuhrChanges = false;\n        }\n        else if (3*MILLISECONDS_IN_A_DAY <= dm-(gp-mp) && dm-(gp-mp) < hz) {  // soorat A-2\n            soorat = Soortain.A_2;\n            istihazaBefore = gp-mp;\n            haiz = dm-(gp-mp);\n            istihazaAfter = 0;\n            aadatTuhrChanges = false;\n        }\n        else{ //if (dm - (gp - mp) < 3*MILLISECONDS_IN_A_DAY) {                  // soorat A-3\n            soorat = Soortain.A_3;\n            istihazaBefore = 0;\n            haiz = hz;\n            istihazaAfter = dm-hz;\n            aadatTuhrChanges = true;\n        }\n    }else {\t// mp>gp qism B\n        if (hz - (mp - gp) >= 3*MILLISECONDS_IN_A_DAY) {\t\t\t\t\t\t\t// soorat B-2\n            soorat = Soortain.B_2;\n            istihazaBefore = 0;\n            haiz = hz-(mp-gp);\n            istihazaAfter = dm-(hz-(mp-gp));\n            aadatTuhrChanges = true;\n        }else{ //if (hz - (mp - gp) < 3*MILLISECONDS_IN_A_DAY) {\t\t\t\t\t\t// soorat B-3\n            soorat = Soortain.B_3;\n            istihazaBefore = 0;\n            haiz = hz;\n            istihazaAfter = dm-hz;\n            aadatTuhrChanges = true;\n        }\n    }\n  return FiveSoortainOutput(soorat,istihazaBefore,haiz,istihazaAfter, aadatTuhrChanges)\n}\nfun addDurationsToDams(fixedDurations: MutableList<FixedDuration>){\n    //currently, this doesn't handle istimrar\n    for (i in fixedDurations.indices){\n        if(fixedDurations[i].type==DurationType.DAM && fixedDurations[i].days>10){\n            //bigger than 10\n            val istihazaBefore = fixedDurations[i].biggerThanTen!!.istihazaBefore\n            val istihazaBeforeStartDate:Date = fixedDurations[i].startDate\n\n            if (istihazaBefore>0){\n                fixedDurations[i].biggerThanTen!!.durationsList += Duration(DurationType.ISTIHAZA_BEFORE,istihazaBefore,istihazaBeforeStartDate)\n            }\n            val haizStartDate = addTimeToDate(istihazaBeforeStartDate, (istihazaBefore))\n            val haiz = fixedDurations[i].biggerThanTen!!.haiz\n            fixedDurations[i].biggerThanTen!!.durationsList += Duration(DurationType.HAIZ,haiz,haizStartDate)\n\n            val istihazaAfterStartDate = addTimeToDate(haizStartDate, (haiz))\n            val istihazaAfter = fixedDurations[i].biggerThanTen!!.istihazaAfter\n            val istihazaAfterEndDate = addTimeToDate(istihazaAfterStartDate, (istihazaAfter))\n            val aadatTuhr = fixedDurations[i].biggerThanTen!!.aadatTuhr\n            val aadatHaz = fixedDurations[i].biggerThanTen!!.aadatHaiz\n\n            if(istihazaAfter>0){\n                if(istihazaAfter>=aadatTuhr+3*MILLISECONDS_IN_A_DAY){\n                    //daur\n                    //find quotient and remainder\n                    var remainder = istihazaAfter%(aadatHaz+aadatTuhr)\n                    var quotient = ((istihazaAfter-remainder)/(aadatHaz+aadatTuhr))\n                    var aadatTuhrStartDate:Date = istihazaAfterStartDate\n                    var aadatTuhrEndDate:Date\n                    var aadatHaizEndDate:Date\n\n                    for(j in 1 .. quotient){\n                        //add a quotient number of tuhr/hazes\n                        aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,(aadatTuhr))\n                        aadatHaizEndDate = addTimeToDate(aadatTuhrEndDate,(aadatHaz))\n\n                        fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,aadatTuhr,aadatTuhrStartDate)\n                        fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.HAIZ,aadatHaz,aadatTuhrEndDate)\n                        aadatTuhrStartDate=aadatHaizEndDate\n                    }\n                    //now deal with remiander\n                    if(remainder==0L){\n                        //there is nothing more to be added\n                    }else if(remainder<=aadatTuhr+3*MILLISECONDS_IN_A_DAY){\n                        //it ends in tuhr\n                        fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,remainder,aadatTuhrStartDate)\n                    }else{\n                        //there is full tuhur, followed by a partial haiz\n                        fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,aadatTuhr,aadatTuhrStartDate)\n                        aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,(aadatTuhr))\n                        var lastHaiz = remainder-aadatTuhr\n                        fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.HAIZ,lastHaiz,aadatTuhrEndDate)\n                    }\n\n                }else{\n                    //no daur\n                    fixedDurations[i].biggerThanTen!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,istihazaAfter,istihazaAfterStartDate)\n\n                }\n            }\n\n        }else if(fixedDurations[i].type==DurationType.DAM_IN_NIFAAS_PERIOD&&fixedDurations[i].days>40){\n            //bigger than 40 nifas\n            var aadatNifas = fixedDurations[i].biggerThanForty!!.nifas\n            //make nifas period\n            fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.NIFAAS,aadatNifas,fixedDurations[i].startDate)\n            //now deal with istihaza after\n            //I'm copy/pasting from above, with minor changes\n\n            val istihazaAfterStartDate = addTimeToDate(fixedDurations[i].startDate, (aadatNifas))\n            val istihazaAfter = fixedDurations[i].biggerThanForty!!.istihazaAfter\n            val istihazaAfterEndDate = addTimeToDate(istihazaAfterStartDate, (istihazaAfter))\n            val aadatTuhr = fixedDurations[i].biggerThanForty!!.aadatTuhr\n            val aadatHaz = fixedDurations[i].biggerThanForty!!.aadatHaiz\n\n            if(istihazaAfter>0){\n                if(istihazaAfter>=aadatTuhr+3*MILLISECONDS_IN_A_DAY){\n                    //daur\n                    //find quotient and remainder\n                    var remainder = istihazaAfter%(aadatHaz+aadatTuhr)\n                    var quotient = ((istihazaAfter-remainder)/(aadatHaz+aadatTuhr))\n                    var aadatTuhrStartDate:Date = istihazaAfterStartDate\n                    var aadatTuhrEndDate:Date\n                    var aadatHaizEndDate:Date\n\n                    for(j in 1 .. quotient){\n                        //add a quotient number of tuhr/hazes\n                        aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,(aadatTuhr))\n                        aadatHaizEndDate = addTimeToDate(aadatTuhrEndDate,(aadatHaz))\n\n                        fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,aadatTuhr,aadatTuhrStartDate)\n                        fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.HAIZ,aadatHaz,aadatTuhrEndDate)\n                        aadatTuhrStartDate=aadatHaizEndDate\n                    }\n                    //now deal with remiander\n                    if(remainder==0L){\n                        //there is nothing more to be added\n                    }else if(remainder<=aadatTuhr+3*MILLISECONDS_IN_A_DAY){\n                        //it ends in tuhr\n                        fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,remainder,aadatTuhrStartDate)\n                    }else{\n                        //there is full tuhur, followed by a partial haiz\n                        fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,aadatTuhr,aadatTuhrStartDate)\n                        aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,(aadatTuhr))\n                        var lastHaiz = remainder-aadatTuhr\n                        fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.HAIZ,lastHaiz,aadatTuhrEndDate)\n                    }\n\n                }else{\n                    //no daur\n                    fixedDurations[i].biggerThanForty!!.durationsList+=Duration(DurationType.ISTIHAZA_AFTER,istihazaAfter,istihazaAfterStartDate)\n\n                }\n            }\n\n        }\n    }\n\n}\n\nfun getHaizDatesList(fixedDurations: MutableList<FixedDuration>):MutableList<Entry>{\n    var hazDatesList = mutableListOf<Entry>()\n\n    for(fixedDuration in fixedDurations){\n        if(fixedDuration.type==DurationType.DAM && fixedDuration.days <=10){\n            //less than 3 were eliminated earlier\n            hazDatesList+=Entry(fixedDuration.startDate,fixedDuration.endDate)\n        }else if(fixedDuration.type==DurationType.DAM && fixedDuration.days>10){\n            for(duration in fixedDuration.biggerThanTen!!.durationsList){\n                if(duration.type==DurationType.HAIZ){\n                    hazDatesList+=Entry(duration.startTime,duration.endDate)\n                }\n            }\n        }else if(fixedDuration.type==DurationType.DAM_IN_NIFAAS_PERIOD && fixedDuration.days<=40){\n            hazDatesList+=Entry(fixedDuration.startDate,fixedDuration.endDate)\n        }else if(fixedDuration.type==DurationType.DAM_IN_NIFAAS_PERIOD && fixedDuration.days>40){\n            for(duration in fixedDuration.biggerThanForty!!.durationsList){\n                if(duration.type==DurationType.HAIZ||duration.type == DurationType.NIFAAS){\n                    hazDatesList+=Entry(duration.startTime,duration.endDate)\n                }\n            }\n        }\n    }\n\n    return hazDatesList\n\n}\nfun addWiladat(fixedDurations: MutableList<FixedDuration>, pregnancy: Pregnancy){\n    for(i in fixedDurations.indices){\n        if(fixedDurations[i].endDate.getTime()>pregnancy.birthTime.getTime()||\n                fixedDurations[i].type==DurationType.DAM_IN_NIFAAS_PERIOD){\n            var newFixedDuration = FixedDuration(DurationType.WILADAT_ISQAT, 0L, mutableListOf(),startDate = pregnancy.birthTime)\n            fixedDurations.add(i,newFixedDuration)\n            break\n        }\n        if(i==fixedDurations.size-1){\n            //if we got to the last one without anything happening, just add it anyway\n            var newFixedDuration = FixedDuration(DurationType.WILADAT_ISQAT, 0L, mutableListOf(),startDate = pregnancy.birthTime)\n            fixedDurations.add(i,newFixedDuration)\n        }\n    }\n}\nfun addStartOfPregnancy(fixedDurations: MutableList<FixedDuration>,pregnancy: Pregnancy){\n    //add start of pregnancy in fixed periods\n    for(i in fixedDurations.indices){\n        if(fixedDurations[i].endDate.getTime()>pregnancy.pregStartTime.getTime()){\n            var newFixedDuration= FixedDuration(DurationType.HAML,0L, mutableListOf(), startDate = pregnancy.pregStartTime)\n            fixedDurations.add(i,newFixedDuration)\n            break\n        }\n        if(i==fixedDurations.size-1){\n            //if we got to the last one without anything happening, just add it anyway\n            var newFixedDuration= FixedDuration(DurationType.HAML,0L, mutableListOf(), startDate = pregnancy.pregStartTime)\n            fixedDurations.add(i,newFixedDuration)\n        }\n    }\n\n}","import kotlin.js.Date\nfun generateOutputStringPregnancy(fixedDurations: MutableList<FixedDuration>,durations: List<Duration>,\n                         isDateOnly:Boolean, pregnancy: Pregnancy):OutputTexts{\n    println(fixedDurations)\n    println(\"last period is ${fixedDurations[fixedDurations.size-1]}\")\n    var englishStr = \"\"\n    var urduStr = \"\"\n    var hazDatesList = getHaizDatesList(fixedDurations)\n    urduStr+= generateUrduOutputStringPregnancy(fixedDurations,isDateOnly,pregnancy)\n\n    var hazDatesStr = generateHazDatesStr(hazDatesList,isDateOnly)\n\n    return OutputTexts(englishStr,urduStr, hazDatesStr,hazDatesList)\n}\n\nfun generateOutputString(fixedDurations: MutableList<FixedDuration>,durations: List<Duration>,\n                         isDateOnly:Boolean):OutputTexts{\n    println(\"Start of GenerateOutputString\")\n    var index = 0\n    var englishStr = \"\"\n    var hazDatesList = getHaizDatesList(fixedDurations)\n\n    while (index<fixedDurations.size){\n        englishStr += outputStringHeaderLine(fixedDurations,index, isDateOnly)\n        println(\"English header complete\")\n        englishStr += outputStringSumOfIndicesLine(fixedDurations,durations, index, isDateOnly)\n        println(\"English sum of indices complete\")\n        englishStr += outputStringIstihazaAfterLine(fixedDurations, index, isDateOnly)\n        println(\"English istihaza after complete\")\n        englishStr += outputStringBiggerThan10Hall(fixedDurations, index, isDateOnly)\n        println(\"English bigger than 10 complete\")\n\n\n        index++\n    }\n    println(\"English output complete\")\n    var urduStr = generateUrduOutputString(fixedDurations, isDateOnly)\n    println(\"Urdu output completed\")\n    var hazDatesStr = generateHazDatesStr(hazDatesList,isDateOnly)\n    return OutputTexts(englishStr,urduStr, hazDatesStr, hazDatesList)\n}\n\nfun generateHazDatesStr(hazDatesList: MutableList<Entry>,isDateOnly: Boolean):String{\n    var str = \"\"\n    for(entry in hazDatesList){\n        str+=\"From ${parseDate(entry.startTime,isDateOnly)} to ${parseDate(entry.endTime,isDateOnly)}<br>\"\n    }\n    return str\n}\n\nclass OutputTexts (\n    var englishText:String,\n    var urduText: String,\n    var haizDatesText:String,\n    var hazDatesList: MutableList<Entry>\n)\nfun generateUrduOutputStringPregnancy(fixedDurations: MutableList<FixedDuration>, isDateOnly: Boolean, pregnancy: Pregnancy):String{\n    var mustabeen = pregnancy.mustabeenUlKhilqat\n    var startTimeOfPregnancy = pregnancy.pregStartTime.getTime()\n    var birthTime = pregnancy.birthTime\n    var str = \"${UnicodeChars.ROSE}<b>جواب ::</b>\\n\\n\"\n\n    if(mustabeen==true){\n        if(fixedDurations[0].type!=DurationType.HAML){\n            str += \"حمل سے پہلے اس ترتیب سے خون آیا اور پاکی ملی:\\n\\n\"\n        }\n        for(index in fixedDurations.indices){\n            str += outputStringUrduHeaderLine(fixedDurations,index, isDateOnly)\n            str += outputStringUrduBiggerThan10Hall(fixedDurations,index, isDateOnly)\n            str += outputStringUrduBiggerThan40Hall(fixedDurations,index, isDateOnly)\n            if(fixedDurations[index].type==DurationType.HAML){\n                str += \"\\n<b>حمل</b>\\n\"\n            }\n            if(fixedDurations[index].type==DurationType.WILADAT_ISQAT){\n                str += \"\\n<b>ولادت ${urduDateFormat(birthTime, isDateOnly)}</b>\\n\"\n                if(index<fixedDurations.size-2){//if there is something after wiladat\n                    str += \"\\n<b>ولادت کے بعد اس ترتیب سے خون آیااور پاکی ملی:</b>\\n\"\n                }\n            }\n\n        }\n        str += outputStringUrduFinalLines(fixedDurations,fixedDurations.size-1, isDateOnly)\n\n\n\n    }else{//if it is ghair mustabeenulkhilqat\n        str += \"اس ترتیب سے خون آیا اور پاکی ملی:\\n\\n\"\n\n        for(index in fixedDurations.indices){\n            str += outputStringUrduHeaderLine(fixedDurations,index, isDateOnly)\n            str += outputStringUrduBiggerThan10Hall(fixedDurations,index, isDateOnly)\n            if(fixedDurations[index].type==DurationType.HAML){\n                str += \"\\n<b>حمل</b>\\n\"\n            }\n            if(fixedDurations[index].type==DurationType.WILADAT_ISQAT){\n                str += \"\\n<b>${urduDateFormat(birthTime, isDateOnly)} کو اسقاط ہوا (غیر مستبین الخلقہ)</b>\\n\"\n                if(index<fixedDurations.size-2){//if there is something after wiladat\n                    str += \"\\n<b>ولادت کے بعد اس ترتیب سے خون آیااور پاکی ملی:</b>\\n\"\n                }\n            }\n\n        }\n        str += outputStringUrduFinalLines(fixedDurations,fixedDurations.size-1, isDateOnly)\n\n    }\n\n\n    return str\n}\n\nfun generateUrduOutputString(fixedDurations: MutableList<FixedDuration>, isDateOnly: Boolean):String{\n    var str = \"${UnicodeChars.ROSE}<b>جواب ::</b>\\n\\n\"\n    str += \"مندرجہ ذیل ترتیب سے دم و طہر آیا:\\n\\n\"\n    var index = 0\n    while (index<fixedDurations.size){\n        str += outputStringUrduHeaderLine(fixedDurations,index, isDateOnly)\n        str += outputStringUrduBiggerThan10Hall(fixedDurations,index, isDateOnly)\n        if(index==fixedDurations.size-1){//if this os the last index\n            str += outputStringUrduFinalLines(fixedDurations,index, isDateOnly)\n        }\n        index++\n    }\n    return str\n}\n\nfun outputStringUrduFinalLines(fixedDurations: MutableList<FixedDuration>, index: Int, isDateOnly: Boolean):String{\n    println(\"Started outputStringUrduFinalLines\")\n    println(\"FIxedDurations is ${fixedDurations}\")\n    println(\"Index is ${index}\")\n\n    var strUrdu = \"\"\n    strUrdu+=outputStringUrduAadatLine(fixedDurations, index, isDateOnly)\n    println(\"Aadat line added $strUrdu\")\n    strUrdu+=outputStringUrduFilHaalLine(fixedDurations, index)\n    println(\"FilHaal line added $strUrdu\")\n    strUrdu+=outputStringUrduAskAgainLine(fixedDurations,index, isDateOnly)\n    println(\"Ask Again Line Added $strUrdu\")\n\n    //plis note down line\n    strUrdu+=\"جب بھی خون یا دھبے آئیں تو وقت تاریخ مہینہ نوٹ فرمالیجئے۔\\n\\n\"\n\n    //Allahu Aaalam line\n    strUrdu+=\"<b>واللہ تعالی اعلم بالصواب</b>\\n\\n\"\n\n    return strUrdu\n}\nfun outputStringUrduFilHaalLine(fixedDurations: MutableList<FixedDuration>, index: Int):String{\n    var strUrdu = \"\"\n    var filHaalPakiStr = \"فی الحال آپ کے پاکی کے دن ہیں اپنی عبادات جاری رکھیں ۔\\n\\n\"\n    var filHaalHaizStr = \"فی الحال آپ کے حیض کے دن ہیں نمازیں نہ پڑہیں ۔\\n\\n\"\n    //right now, we are just going to check to see what last halat is\n    var istihazaAfter = fixedDurations[index].biggerThanTen?.istihazaAfter ?: return \"\"\n    var aadatHaiz = fixedDurations[index].biggerThanTen?.aadatHaiz ?: return \"\"\n    var aadatTuhr = fixedDurations[index].biggerThanTen?.aadatTuhr ?: return \"\"\n    if(istihazaAfter==0L){//last halat is haiz\n        strUrdu+=filHaalHaizStr\n    }else if(istihazaAfter>=aadatTuhr+3){//last period is long istihaza, lets's figure out more\n        //find remainder\n        var remainder = istihazaAfter%(aadatHaiz+aadatTuhr)\n\n        if (remainder<aadatTuhr + 3 && remainder!=0L){//it ended in tuhr\n            strUrdu+=filHaalPakiStr\n        }else{//it ended in haiz or remainder is 0\n             if (remainder!=0L){//it ended in haiz\n                 strUrdu+=filHaalHaizStr\n            }else{//it ended in tuhr\n                strUrdu+=filHaalPakiStr\n            }\n        }\n    }else{//last halat is short istihaza\n        strUrdu+=filHaalPakiStr\n    }\n\n    return strUrdu\n}\n\nfun outputStringUrduAskAgainLine(fixedDurations: MutableList<FixedDuration>,index: Int, isDateOnly: Boolean):String{\n    var strUrdu = \"\"\n    //my understanding is, that ask again line only gets generated if the fil haal is istihazaAfter\n    var istihazaAfter = fixedDurations[index].biggerThanTen?.istihazaAfter ?: return \"\"\n    var aadatHaiz = fixedDurations[index].biggerThanTen?.aadatHaiz ?: return \"\"\n    var aadatTuhr = fixedDurations[index].biggerThanTen?.aadatTuhr ?: return \"\"\n\n\n    if(istihazaAfter!=0L){//if there is an istihaza after\n        var endDateOfBleeding = fixedDurations[index].startDate?.let { addTimeToDate(it, fixedDurations[index].timeInMilliseconds) }\n        var askAgainDate:Date? = null\n        if(istihazaAfter>=aadatTuhr+3){//if istihazaAfter is long\n            //find remainder\n            var remainder = istihazaAfter%(aadatHaiz+aadatTuhr)\n            if (remainder < aadatTuhr+3){//it ended in istihaza\n                var startTimeOfIstihaza = endDateOfBleeding?.let { addTimeToDate(it, -remainder) }\n                askAgainDate = startTimeOfIstihaza?.let { addTimeToDate(it, aadatTuhr) }!!\n            }else{//it ended in haiz\n\n            }\n\n        }else{//short istihazaAfter\n            if(fixedDurations[index].biggerThanTen?.qism==Soortain.A_3){\n                //this can change to A2. gotta figure out when. set ask again to then.\n            }else{\n                var endDateOfHaiz = endDateOfBleeding?.let { addTimeToDate(it, -(istihazaAfter)) }\n                askAgainDate = endDateOfHaiz?.let { addTimeToDate(it, (aadatTuhr)) }!!\n            }\n        }\n        if(askAgainDate!=null){\n            strUrdu = \"اگر خون اسی طرح جاری رہے یا فی الحال بند ہوجائے لیکن پندرہ دن کی کامل پاکی نہیں ملی کہ دوبارہ خون یا دھبہ آگیا تب پھر<b> ${urduDateFormat(askAgainDate, isDateOnly)} تک آپ کے یقینی پاکی کے دن ہونگے۔</b>\\n\\n\"\n        }\n    }\n\n    return strUrdu\n}\nfun outputStringUrduAadatLine(fixedDurations: MutableList<FixedDuration>, index: Int, isDateOnly: Boolean):String{\n    var strUrdu = \"\"\n    var aadatHaiz = fixedDurations[index].biggerThanTen?.aadatHaiz ?: return \"\"\n    var aadatTuhr = fixedDurations[index].biggerThanTen?.aadatTuhr ?: return \"\"\n    var istihazaAfter = fixedDurations[index].biggerThanTen?.istihazaAfter ?: return \"\"\n\n    if (istihazaAfter>=aadatTuhr+3) {//if we have a long istihaza after, there is a possibility that aadat changed\n        //find remainder\n        var remainder = istihazaAfter % (aadatHaiz + aadatTuhr)\n        if (remainder<aadatTuhr + 3 && remainder!=0L){//it ended in tuhr, so aadat doesn't change\n\n        }else{//it ended in haiz or remainder is 0 (which means ending in tuhr)\n            //change aadatHaiz if remainder is not zero (if it is zero, aadat doesn't change, so shouldn't be printed\n            if (remainder!=0L){\n                val aadatHaiz = (remainder-aadatTuhr).toString()\n            }\n        }\n    }\n\n    strUrdu+=\"${UnicodeChars.GREEN_CIRCLE} <b>عادت:: حیض: ${daysHoursMinutesDigitalUrdu(aadatHaiz, isDateOnly)}، طہر: ${daysHoursMinutesDigitalUrdu(aadatTuhr, isDateOnly)}</b>\\n\\n\"\n\n    return strUrdu\n}\n\nfun outputStringUrduBiggerThan10Hall(fixedDurations: MutableList<FixedDuration>,index: Int, isDateOnly: Boolean):String{\n    var strUrdu = \"\"\n\n    var istimrar = false\n    if (fixedDurations[index].type==DurationType.ISTIMRAR){\n        istimrar = true\n    }\n\n    fun haizLineUrdu(sd:Date,ed:Date, isDateOnly: Boolean):String{\n        return \"${UnicodeChars.RED_CIRCLE} ${urduDateFormat(sd, isDateOnly)} تا ${urduDateFormat(ed,isDateOnly)} کل ${daysHoursMinutesDigitalUrdu((difference(sd,ed)), isDateOnly)} حیض کے ہیں۔\\n\\n\"\n    }\n    fun istihazaLineUrdu(sd:Date,ed:Date, isDateOnly: Boolean):String{\n        return \"${UnicodeChars.YELLOW_CIRCLE} ${urduDateFormat(sd, isDateOnly)} تا ${urduDateFormat(ed,isDateOnly)} کل ${daysHoursMinutesDigitalUrdu(difference(sd,ed), isDateOnly)} یقینی پاکی (استحاضہ) کے ہیں۔\\n\\n\"\n    }\n\n    if((fixedDurations[index].days>10&&fixedDurations[index].type==DurationType.DAM)\n        ||istimrar == true){\n        strUrdu += \"${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}\\n\\n\"\n        strUrdu += \"${UnicodeChars.RAINBOW} <b>مسئلہ کا حل ::</b>\\n\\n\"\n\n        for(duration in fixedDurations[index].biggerThanTen!!.durationsList){\n            if(duration.type == DurationType.ISTIHAZA_BEFORE){\n                strUrdu+= istihazaLineUrdu(duration.startTime,duration.endDate,isDateOnly)\n                strUrdu+= \"${UnicodeChars.BLACK_SQUARE} اس دوران میں جو نمازیں حیض سمجھ کر چھوڑیں،  ان کی قضاء ضروری ہے۔\\n\\n\"\n\n            }else if(duration.type == DurationType.HAIZ){\n                strUrdu+= haizLineUrdu(duration.startTime,duration.endDate,isDateOnly)\n\n            }else if(duration.type == DurationType.ISTIHAZA_AFTER){\n                strUrdu+= istihazaLineUrdu(duration.startTime,duration.endDate,isDateOnly)\n                strUrdu+= \"${UnicodeChars.BLACK_SQUARE} ${urduDateFormat(duration.startTime,isDateOnly)} کو اگر غسل کر لیا تھا، تو غسل کے بعد والی نمازیں درست ہیں۔ اگر غسل نہیں کیا تھا، تو جب تک غسل نہیں کیا، اس کی نمازیں قضاء کریں۔\\n\\n\"\n                strUrdu+= \"${UnicodeChars.BLACK_SQUARE} اگر اس دوران میں کوئی نمازیں حیض سمجھ کر چھوڑیں تھیں، ان کو بھی قضاء کریں۔\\n\\n\"\n\n            }\n        }\n\n        strUrdu += \"${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}\\n\\n\"\n    }\n\n    return strUrdu\n}\nfun outputStringUrduBiggerThan40Hall(fixedDurations: MutableList<FixedDuration>,index: Int, isDateOnly: Boolean):String{\n    println(\"starting urdu output of bigger than 40\")\n\n    var strUrdu = \"\"\n\n    fun nifasLineUrdu(sd:Date,ed:Date, isDateOnly: Boolean):String{\n        return \"${UnicodeChars.RED_CIRCLE} ${urduDateFormat(sd, isDateOnly)} تا ${urduDateFormat(ed,isDateOnly)} کل ${daysHoursMinutesDigitalUrdu((difference(sd,ed)), isDateOnly)} نفاس کے ہیں۔\\n\\n\"\n    }\n    fun haizLineUrdu(sd:Date,ed:Date, isDateOnly: Boolean):String{\n        return \"${UnicodeChars.RED_CIRCLE} ${urduDateFormat(sd, isDateOnly)} تا ${urduDateFormat(ed,isDateOnly)} کل ${daysHoursMinutesDigitalUrdu((difference(sd,ed)), isDateOnly)} حیض کے ہیں۔\\n\\n\"\n    }\n    fun istihazaLineUrdu(sd:Date,ed:Date, isDateOnly: Boolean):String{\n        return \"${UnicodeChars.YELLOW_CIRCLE} ${urduDateFormat(sd, isDateOnly)} تا ${urduDateFormat(ed,isDateOnly)} کل ${daysHoursMinutesDigitalUrdu(difference(sd,ed), isDateOnly)} یقینی پاکی (استحاضہ) کے ہیں۔\\n\\n\"\n    }\n    println(\"biggerthan40 output string generation\")\n\n    if(fixedDurations[index].days>40&&fixedDurations[index].type==DurationType.DAM_IN_NIFAAS_PERIOD){\n        println(\"Inside the if\")\n        strUrdu += \"${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}\\n\\n\"\n        strUrdu += \"${UnicodeChars.RAINBOW} <b>مسئلہ کا حل ::</b>\\n\\n\"\n        println(strUrdu)\n\n        for(duration in fixedDurations[index].biggerThanForty!!.durationsList){\n            if(duration.type==DurationType.NIFAAS){\n                strUrdu+= nifasLineUrdu(duration.startTime,duration.endDate, isDateOnly)\n            }else if(duration.type==DurationType.ISTIHAZA_AFTER){\n                strUrdu+= istihazaLineUrdu(duration.startTime,duration.endDate, isDateOnly)\n                strUrdu+= \"${UnicodeChars.BLACK_SQUARE} ${urduDateFormat(duration.startTime,isDateOnly)} کو اگر غسل کر لیا تھا، تو غسل کے بعد والی نمازیں درست ہیں۔ اگر غسل نہیں کیا تھا، تو جب تک غسل نہیں کیا، اس کی نمازیں قضاء کریں۔\\n\\n\"\n                strUrdu+= \"${UnicodeChars.BLACK_SQUARE} اگر اس دوران میں کوئی نمازیں حیض سمجھ کر چھوڑیں تھیں، ان کو بھی قضاء کریں۔\\n\\n\"\n\n            }else if(duration.type==DurationType.HAIZ){\n                strUrdu+= haizLineUrdu(duration.startTime,duration.endDate, isDateOnly)\n\n            }\n        }\n        strUrdu += \"${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}${UnicodeChars.FAT_DASH}\\n\\n\"\n    }\n\n    return strUrdu\n}\n\nfun outputStringUrduHeaderLine(fixedDurations: MutableList<FixedDuration>,index: Int, isDateOnly: Boolean):String{\n    var outputString = \"\"\n    if (fixedDurations[index].type==DurationType.DAM){\n        var sd:Date = fixedDurations[index].startDate\n        var et = fixedDurations[index].endDate\n        println(\"Index is $index\")\n        println(\"StartDate is $sd\")\n        println(\"EndDate is $et\")\n        println(\"EndDate2 is ${Date(sd.getTime().toLong()+fixedDurations[index].timeInMilliseconds)}\")\n        if (index +1<fixedDurations.size && fixedDurations[index+1].istihazaAfter>0){//if there is a period after it, and is has an istihaza after\n            et = addTimeToDate(et, fixedDurations[index +1].istihazaAfter)\n        }\n        if(fixedDurations[index].days in 3.0..10.0){//if it's between 3 and 10, write haiz\n            outputString = \"${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)}\" +\n                    \" تک کل ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds,isDateOnly)} حیض۔\\n\\n\"\n        }else{\n            if (fixedDurations[index].indices.size>1){//this dam is made up of more than 1\n                outputString = \"\\n\\n${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)}\" +\n                        \" تک کل ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds,isDateOnly)} خون جاری رھا (چونکہ آپ کو دو خون کے درمیان میں 15 دن کی کامل پاکی نہیں ملی ہے اسلیئے یوں سمجھا جائے گا کہ آپ کو مسلسل خون جاری ہی رہا ہے۔)\\n\\n\"\n\n            }else{\n                outputString = \"\\n\\n${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)}\" +\n                        \" تک کل ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds,isDateOnly)} خون۔\\n\\n\"\n            }\n        }\n\n    }else if (fixedDurations[index].type == DurationType.TUHR){\n        var time = fixedDurations[index].timeInMilliseconds\n        outputString =  \"${daysHoursMinutesDigitalUrdu(time, isDateOnly)} پاکی۔\\n\\n\"\n\n    }else if (fixedDurations[index].type == DurationType.TUHREFAASID){\n        outputString =  \"${daysHoursMinutesDigitalUrdu(fixedDurations[index].istihazaAfter, isDateOnly)}\" +\n                \" استحاضہ + ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds, isDateOnly)} پاکی =\" +\n                \" ${daysHoursMinutesDigitalUrdu((fixedDurations[index].istihazaAfter+fixedDurations[index].timeInMilliseconds), isDateOnly)} طہر فاسد۔\\n\\n\"\n    }else if (fixedDurations[index].type == DurationType.DAM_IN_NIFAAS_PERIOD){\n        var sd = fixedDurations[index].startDate\n        var et = fixedDurations[index].endDate\n        if(fixedDurations[index].days<=40){\n            outputString = \"${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)}\" +\n                    \" تک کل ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds,isDateOnly)} نفاس۔\\n\\n\"\n        }else{//more than 40\n            outputString = \"\\n\\n${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)}\" +\n                    \" تک کل ${daysHoursMinutesDigitalUrdu(fixedDurations[index].timeInMilliseconds,isDateOnly)} خون۔\\n\\n\"\n        }\n    }else if (fixedDurations[index].type == DurationType.TUHR_IN_HAML){\n\n    }else if (fixedDurations[index].type == DurationType.DAM_IN_HAML){\n\n    }else if (fixedDurations[index].type == DurationType.ISTIMRAR){//istimrar\n        var sd:Date = fixedDurations[index].startDate\n        var et = addTimeToDate(fixedDurations[index].startDate,fixedDurations[index].timeInMilliseconds)\n        outputString =  \"${urduDateFormat(sd, isDateOnly)} سے ${urduDateFormat(et, isDateOnly)} تا حال خون جاری ہے۔\\n\\n\"\n    }\n    return outputString\n}\n\nfun outputStringHeaderLine(fixedDurations: MutableList<FixedDuration>, index:Int, isDateOnly: Boolean):String{\n    if(fixedDurations[index].type==DurationType.ISTIMRAR){\n        return \"<b>${fixedDurations[index].type}</b>\\n\"\n    }else if((index +1)< fixedDurations.size && fixedDurations[index+1].istihazaAfter>0){\n        return \"<b>${daysHoursMinutesDigital(fixedDurations[index].timeInMilliseconds,isDateOnly)} ${fixedDurations[index].type}</b>\\n\"\n    }else{\n        return \"<b>${daysHoursMinutesDigital(fixedDurations[index].timeInMilliseconds,isDateOnly)} ${fixedDurations[index].type}</b>\\n\"\n\n    }\n}\n\nfun outputStringSumOfIndicesLine(fixedDurations: MutableList<FixedDuration>, durations:List<Duration>, index:Int, isDateOnly: Boolean):String{\n    if(fixedDurations[index].indices.size>1){\n        var sum:Long = 0L\n        var str = \"\"\n        for (index in fixedDurations[index].indices){\n            sum+=durations[index].timeInMilliseconds\n            str += \" + ${daysHoursMinutesDigital(durations[index].timeInMilliseconds,isDateOnly)}\"\n        }\n        str=str.removePrefix(\" + \")\n        if(fixedDurations[index].type==DurationType.ISTIMRAR){\n            str+=\" + istimrar\"\n            return \"\\t${str} = istimrar\\n\"\n        }else{\n            return \"\\t${str} = ${daysHoursMinutesDigital(sum,isDateOnly)}\\n\"\n        }\n    }else{\n        return \"\"\n    }\n}\n\nfun outputStringIstihazaAfterLine(fixedDurations: MutableList<FixedDuration>,index: Int, isDateOnly: Boolean):String{\n    val istihazaAfter = fixedDurations[index].istihazaAfter\n    var str = \"\"\n    if(istihazaAfter!=0L){\n        str +=\"\\t${daysHoursMinutesDigital(fixedDurations[index].timeInMilliseconds,isDateOnly)} \" +\n                \"tuhr + ${daysHoursMinutesDigital(istihazaAfter,isDateOnly)} istihaza \" +\n                \"= ${daysHoursMinutesDigital((fixedDurations[index].timeInMilliseconds +\n                        fixedDurations[index].istihazaAfter),isDateOnly)} tuhr-e-faasid\\n\"\n    }\n\n    return str\n}\n\nfun outputStringBiggerThan10Hall(fixedDurations: MutableList<FixedDuration>,index:Int, isDateOnly: Boolean):String{\n    val mp = fixedDurations[index].biggerThanTen?.mp ?: return \"\"\n    val gp = fixedDurations[index].biggerThanTen?.gp ?: return \"\"\n    val dm = fixedDurations[index].biggerThanTen?.dm ?: return \"\"\n    val hz = fixedDurations[index].biggerThanTen?.hz ?: return \"\"\n    val qism = fixedDurations[index].biggerThanTen?.qism ?: return \"\"\n    val istihazaBefore = fixedDurations[index].biggerThanTen?.istihazaBefore ?: return \"\"\n    val haiz = fixedDurations[index].biggerThanTen?.haiz ?: return \"\"\n    val istihazaAfter = fixedDurations[index].biggerThanTen?.istihazaAfter ?: return \"\"\n    val aadatTuhr = fixedDurations[index].biggerThanTen?.aadatTuhr ?: return \"\"\n    val aadatHaz = fixedDurations[index].biggerThanTen?.aadatHaiz ?: return \"\"\n    var istimrar = false\n    if (fixedDurations[index].type==DurationType.ISTIMRAR){\n        istimrar = true\n    }\n\n\n    //output hukm:\n    var str =\"\"\n//    var str = \"Rough work \\n\"\n//    str += \"MP\\tGP\\tDm\\tHz\\tQism\\n\"\n\n    if (istimrar == true){\n        str += \"\\t${daysHoursMinutesDigital(mp,isDateOnly)}\\t${daysHoursMinutesDigital(gp,isDateOnly)}\\tIstimrar\\t\" +\n                \"${daysHoursMinutesDigital(hz,isDateOnly)}\\t${qism}\\n\"\n    }else{\n        str += \"\\t${daysHoursMinutesDigital(mp,isDateOnly)}\\t${daysHoursMinutesDigital(gp,isDateOnly)}\\t\" +\n                \"${daysHoursMinutesDigital(dm,isDateOnly)}\\t${daysHoursMinutesDigital(hz,isDateOnly)}\\t${qism}\\n\"\n    }\n\n    str +=\"\\tAadat: ${daysHoursMinutesDigital(aadatHaz,isDateOnly)}/${daysHoursMinutesDigital(aadatTuhr,isDateOnly)}\\n\"\n\n    if(istimrar == true){\n        str += \"\\tFrom the start of istimrar, the first \"\n    }else{\n        str += \"\\tOut of ${daysHoursMinutesDigital(dm,isDateOnly)}, the first \"\n    }\n\n    if (istihazaBefore>0){\n        str += \"${daysHoursMinutesDigital(istihazaBefore,isDateOnly)} are istihaza, then the next \"\n    }\n    str += \"${daysHoursMinutesDigital(haiz,isDateOnly)} are haiz, \"\n\n    if (istimrar == true){\n        str += \"then there will be a daur of ${daysHoursMinutesDigital(aadatTuhr,isDateOnly)} tuhr, \" +\n                \"${daysHoursMinutesDigital(aadatHaz,isDateOnly)} haiz\"\n    }else{\n        //if istihazaAfter is bigger than addatTuhr +3, run daur\n        if (istihazaAfter>=aadatTuhr+3){\n            //find quotient and remainder\n            val remainder = istihazaAfter%(aadatHaz+aadatTuhr)\n            val quotient = ((istihazaAfter-remainder)/(aadatHaz+aadatTuhr)).toLong()\n\n            if(remainder == 0L){\n                for (j in 1 until quotient){\n                    str+=\"then the next ${daysHoursMinutesDigital(aadatTuhr,isDateOnly)} are istihaza, \" +\n                            \"then the next ${daysHoursMinutesDigital(aadatHaz,isDateOnly)} are haiz, \"\n                }\n                str+=\"then the next ${daysHoursMinutesDigital(aadatTuhr,isDateOnly)} are istihaza, \" +\n                        \"then the last ${daysHoursMinutesDigital(aadatHaz,isDateOnly)} are haiz. \"\n\n            }else{//remainder exists\n                for (j in 1 .. quotient){\n                    str+=\"then the next ${daysHoursMinutesDigital(aadatTuhr,isDateOnly)} are istihaza, \" +\n                            \"then the next ${daysHoursMinutesDigital(aadatHaz,isDateOnly)} are haiz, \"\n                }\n                if (remainder<aadatTuhr + 3){//it ended in tuhr\n                    str+=\"then the last ${daysHoursMinutesDigital(remainder,isDateOnly)} are istihaza.\\n\"\n\n                }else{//it ended in haiz\n                    str+=\"then the next ${daysHoursMinutesDigital(aadatTuhr,isDateOnly)} are tuhr, \" +\n                            \"then the last ${daysHoursMinutesDigital(remainder-aadatTuhr,isDateOnly)} are haiz\\n\"\n                    //change aadatHaiz\n                    val newAadatHaz = remainder-aadatTuhr\n                    //add aadat line\n                    str+=\"\\tAadat: ${daysHoursMinutesDigital(newAadatHaz,isDateOnly)}/${daysHoursMinutesDigital(aadatTuhr,isDateOnly)}\\n\"\n\n                }\n            }\n        }else{\n            str += \"and the last ${daysHoursMinutesDigital(istihazaAfter,isDateOnly)} are istihaza.\\n\"\n\n        }\n    }\n\n    str+=\"\\t\\n\"\n\n    //output hukm in dates\n    val istihazaBeforeStartDate:Date = fixedDurations[index].startDate!!\n    val haizStartDate = addTimeToDate(istihazaBeforeStartDate, istihazaBefore)\n    val istihazaAfterStartDate = addTimeToDate(haizStartDate, haiz)\n    val istihazaAfterEndDate = addTimeToDate(istihazaAfterStartDate, istihazaAfter)\n\n    if(istihazaBefore!=0L){\n        str+=\"\\tFrom ${parseDate(istihazaBeforeStartDate, isDateOnly)} to ${parseDate(haizStartDate, isDateOnly)} is istihaza, yaqeeni paki\\n\"\n    }\n    str+=\"\\tFrom ${parseDate(haizStartDate, isDateOnly)} to ${parseDate(istihazaAfterStartDate, isDateOnly)} is haiz\\n\"\n    if(istihazaAfter!=0L){\n        if (istihazaAfter>=aadatTuhr+3){\n            //find quotient and remainder\n            var remainder = istihazaAfter%(aadatHaz+aadatTuhr)\n            var quotient = ((istihazaAfter-remainder)/(aadatHaz+aadatTuhr)).toLong()\n\n            if(istimrar == true){\n                str+= \"\\t\\n\"\n                str+= \"\\tThe first 3 cycles of daur are as follows:\\n\"\n                remainder = 0L\n                quotient = 3L\n            }\n\n            var aadatTuhrStartDate:Date = istihazaAfterStartDate\n            var aadatTuhrEndDate:Date\n            var aadatHaizEndDate:Date\n            for (j in 1 .. quotient){\n                aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,aadatTuhr)\n                aadatHaizEndDate = addTimeToDate(aadatTuhrEndDate,aadatHaz)\n                str+= \"\\tFrom ${parseDate(aadatTuhrStartDate, isDateOnly)} to ${parseDate(aadatTuhrEndDate, isDateOnly)} is istihaza, yaqeeni paki\\n\"\n                str+= \"\\tFrom ${parseDate(aadatTuhrEndDate, isDateOnly)} to ${parseDate(aadatHaizEndDate, isDateOnly)} is haiz\\n\"\n                aadatTuhrStartDate=aadatHaizEndDate\n            }\n            if (remainder<aadatTuhr + 3 && remainder!=0L){//it ended in tuhr\n                str+= \"\\tFrom ${parseDate(aadatTuhrStartDate, isDateOnly)} to ${parseDate(istihazaAfterEndDate, isDateOnly)} is istihaza, yaqeeni paki\\n\"\n\n            }else{//it ended in haiz or remainder is 0\n                aadatTuhrEndDate = addTimeToDate(aadatTuhrStartDate,aadatTuhr)\n                str+= \"\\tFrom ${parseDate(aadatTuhrStartDate, isDateOnly)} to ${parseDate(aadatTuhrEndDate, isDateOnly)} is istihaza, yaqeeni paki\\n\"\n                str+= \"\\tFrom ${parseDate(aadatTuhrEndDate, isDateOnly)} to ${parseDate(istihazaAfterEndDate, isDateOnly)} is haiz\\n\"\n\n                //change aadatHaiz if remainder is not zero (if it is zero, aadat doesn't change, so shouldn't be printed\n                if (remainder!=0L){\n                    val newAadatHaz1 = remainder-aadatTuhr\n                    //add aadat line\n                    str+=\"\\tAadat: ${daysHoursMinutesDigital(newAadatHaz1,isDateOnly)}/${daysHoursMinutesDigital(aadatTuhr,isDateOnly)}\\n\"\n                }\n           }\n\n        }else{//no duar\n            str+=\"\\tFrom ${parseDate(istihazaAfterStartDate, isDateOnly)} to ${parseDate(istihazaAfterEndDate, isDateOnly)} is istihaza, yaqeeni paki\\n\"\n\n        }\n    }\n   return str\n}","import kotlinx.browser.document\nimport kotlinx.html.*\nimport kotlinx.html.consumers.onFinalize\nimport kotlinx.html.dom.createTree\nimport org.w3c.dom.*\nimport kotlin.js.Date\nimport kotlin.math.abs\nimport kotlin.math.absoluteValue\nimport kotlin.math.round\nimport kotlin.math.roundToInt\nimport kotlin.time.DurationUnit\nimport kotlin.time.ExperimentalTime\nimport kotlin.time.toDuration\n\n\nconst val MILLISECONDS_IN_A_DAY:Long = 86400000\n\nobject Events {\n    const val VISIBILITY_CHANGE = \"visibilitychange\"\n}\n\nobject UnicodeChars {\n    const val RED_CIRCLE = \"&#x1F534;\"\n    const val WHITE_CIRCLE = \"&#x26AA;\"\n    const val YELLOW_CIRCLE = \"&#x1F7E1;\"\n    const val GREEN_CIRCLE = \"&#x1F7E2;\"\n    const val BLACK_SQUARE = \"&#9642;\"\n    const val FAT_DASH = \"&#x2796;\"\n    const val ROSE = \"&#x1F339;\"\n    const val RAINBOW = \"&#x1F308;\"\n\n}\n\nval Document.isHidden get() = document[\"hidden\"] as Boolean\n\n\nprivate fun ChildNode.insertSiblingRelative(\n    block: TagConsumer<HTMLElement>.() -> Unit,\n    insert: (ChildNode) -> Unit\n): List<HTMLElement> = ArrayList<HTMLElement>().also { result ->\n    (this as Node).ownerDocument!!.createTree().onFinalize { child, partial ->\n        if (!partial) {\n            result.add(child)\n            insert(child)\n        }\n    }.block()\n}\n\nfun ChildNode.before(block: TagConsumer<HTMLElement>.() -> Unit) = insertSiblingRelative(block) { node -> before(node) }\nfun ChildNode.after(block: TagConsumer<HTMLElement>.() -> Unit) = insertSiblingRelative(block) { node -> after(node) }\n\nfun ParentNode.getChildById(id: String) = querySelector(\"#$id\")\n\n\ninline fun <reified T : Element> Element.getAncestor(predicate: (Element) -> Boolean = { true }): T? {\n    var parent: Element? = parentElement\n    while (true) {\n        if (parent == null) return null\n        if (parent is T && predicate(parent)) return parent\n        parent = parent.parentElement\n    }\n}\n\nval HTMLTableRowElement.rowIndexWithinTableBody get() =\n    (parentElement as HTMLTableSectionElement).children.asList().indexOf(this)\n\n\n@HtmlTagMarker\nfun FlowOrInteractiveOrPhrasingContent.dateTimeLocalInputWithFallbackGuidelines(\n    classes: String? = null,\n    block: INPUT.() -> Unit = {}\n) {\n    dateTimeLocalInput(classes = classes) {\n        placeholder = \"YYYY-MM-DDThh:mm\"\n        pattern = \"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}\"\n        block()\n    }\n}\n\n@HtmlTagMarker\nfun FlowOrInteractiveOrPhrasingContent.customDateTimeInput(\n    isDateOnly: Boolean,\n    classes: String? = null,\n    block: INPUT.() -> Unit = {}\n) {\n    if (isDateOnly) {\n        dateInput(classes = classes, block = block)\n    } else {\n        dateTimeLocalInputWithFallbackGuidelines(classes = classes, block = block)\n    }\n}\n\n\n/* Looks like the compiler argument for opting in to experimental features\n * ('-Xopt-in=kotlin.RequiresOptIn') is not actually enforced, so suppressing the warning about it's\n * requirement here for now..\n */\n@Suppress(\"EXPERIMENTAL_IS_NOT_ENABLED\")\n@OptIn(ExperimentalTime::class)\nfun Date.offsetLocalTimeToUtc() =\n    Date(getTime() - getTimezoneOffset().toDuration(DurationUnit.MINUTES).inWholeMilliseconds)\n\nfun parseToLocalDate(dateString: String, isDateOnly: Boolean): Date {\n    val date = Date(dateString)\n    return if (isDateOnly) {\n        date\n    } else {\n        date.offsetLocalTimeToUtc()\n    }\n}\n\nfun Date.toDateInputString(isDateOnly: Boolean): String {\n    val letterToTrimFrom = if (isDateOnly) 'T' else 'Z'\n    val string = toISOString().takeWhile { it != letterToTrimFrom }\n    return if (isDateOnly) {\n        string\n    } else {\n        // Drop any precision below minutes (seconds, milliseconds, etc.)\n        string.take(16)\n    }\n}\n\nfun convertInputValue(value: String, isDateOnly: Boolean): String {\n    if (value.isEmpty()) return \"\"\n    return parseToLocalDate(value, !isDateOnly) // Inverting the isDateOnly since we need to pass the existing state\n        .toDateInputString(isDateOnly)\n}\n\nfun currentTimeString(isDateOnly: Boolean) = Date().offsetLocalTimeToUtc().toDateInputString(isDateOnly)\n\n\nfun addTimeToDate(date: Date,timeInMilliseconds:Long):Date{\n    return Date(date.getTime() + timeInMilliseconds)\n}\n\nfun parseDays(input: String): Double? {\n    if (input.isEmpty()) return null\n    val sections = input.split(':')\n    var days = sections[0].toInt().toDouble()\n    val hours = sections.getOrNull(1)?.toInt() ?: return days\n    require(hours in 0 until 24) { \"Invalid hours value\" }\n    days += hours / 24.toDouble()\n    val minutes = sections.getOrNull(2)?.toInt() ?: return days\n    require(minutes in 0 until 60) { \"Invalid minutes value\" }\n    days += minutes / (24 * 60).toDouble()\n    val seconds = sections.getOrNull(3)?.toInt() ?: return days\n    require(seconds in 0 until 60) { \"Invalid seconds value\" }\n    days += seconds / (24 * 60 * 60).toDouble()\n    return days\n}\n\nfun daysHoursMinutesDigitalUrdu(numberOfMilliseconds:Long, isDateOnly: Boolean):String{\n    val numberOfDays = numberOfMilliseconds/MILLISECONDS_IN_A_DAY\n    var totalMinutes = numberOfDays*24*60\n\n    var minutes=(totalMinutes%60).toDouble();\n    var remainingHours = (totalMinutes - minutes)/60\n    var hours = remainingHours % 24;\n    var days = (remainingHours - hours)/24;\n    minutes=round(minutes);\n    hours=round(hours)\n    days=round(days)\n    if(minutes == 60.0){\n        minutes = 0.0\n        hours+=1\n    }\n    if(hours==24.0){\n        hours = 0.0\n        days += 1.0\n    }\n    var strHours = \"${hours.toString()} گھنٹے \"\n    var strMinutes = \"${minutes.toString()} منٹ \"\n    var strDays = \"${days.toString()} دن \"\n\n    if(hours==1.0){\n        strHours = \"${hours.toString()} گھنٹا \"\n    }\n\n    if(hours==0.0){\n        strHours = \"\"\n    }\n    if(days==0.0){\n        strDays = \"\"\n    }\n    if(minutes == 0.0){\n        strMinutes = \"\"\n    }\n//    if(hours<10){\n//        strHours = \"0${hours}\";\n//    }\n//    if(minutes<10){\n//        strMinutes = \"0${minutes}\";\n//    }\n    var returnStatement = \"${strDays}${strHours}${strMinutes}\"\n    if(isDateOnly){\n        returnStatement = strDays\n    }\n    return(returnStatement);\n}\n\nfun daysHoursMinutesDigital(numberOfMilliseconds:Long, isDateOnly: Boolean):String{\n    val numberOfDays = numberOfMilliseconds/MILLISECONDS_IN_A_DAY\n    var totalMinutes = numberOfDays*24*60\n\n    var minutes=(totalMinutes%60).toDouble();\n    var remainingHours = (totalMinutes - minutes)/60\n    var hours = remainingHours % 24;\n    var days = (remainingHours - hours)/24;\n    minutes=round(minutes);\n    hours=round(hours)\n    days=round(days)\n    if(minutes == 60.0){\n        minutes = 0.0\n        hours+=1.0\n    }\n    if(hours==24.0){\n        hours = 0.0\n        days += 1.0\n    }\n\n    var strHours = hours.toString()\n    var strMinutes = minutes.toString()\n    var strDays = days.toString()\n    if(hours<10){\n        strHours = \"0${hours}\";\n    }\n    if(minutes<10){\n        strMinutes = \"0${minutes}\";\n    }\n    var returnStatement = \"${strDays}d:${strHours}h:${strMinutes}m\"\n    if(isDateOnly==true){\n        returnStatement = \"${strDays} day(s)\"\n    }\n    return(returnStatement);\n}\n fun parseDate(date: Date, isDateOnly: Boolean):String{\n  //   Sat, 05 Jun 2021 06:21:59 GMT\n     var dateStr = (date.toUTCString()).dropLast(13).drop(5)\n     var hours = (date.toUTCString()).dropLast(10).drop(17).toInt()\n     var minutesStr = (date.toUTCString()).dropLast(7).drop(20)\n     var hoursStr:String\n     var ampm = \"am\"\n     if (hours >=12){\n         hours-=12\n         ampm = \"pm\"\n     }\n     if(hours == 0){\n         hours = 12\n     }\n     if(hours<10){\n         hoursStr = \"0${hours}\"\n     }else{\n         hoursStr = hours.toString()\n     }\n\n\n     if(isDateOnly == true){\n        return dateStr\n        //05 Jun 2021\n    }else{\n        //05 Jun 2021 06:21\n        return \"${hoursStr}:${minutesStr} ${ampm}, on ${dateStr}\"\n    }\n }\nfun difference(date1:Date,date2:Date):Long{\n\n    var diff = (date2.getTime()-date1.getTime()).toLong()\n    return diff\n\n}\n\n fun urduDateFormat(date: Date, isDateOnly: Boolean):String{\n     var day = date.getUTCDate().toString()\n     var month = date.getUTCMonth()\n     var urduMonth = \"\"\n     if (month == 0){\n         urduMonth = \"جنوری\"\n     }else if (month == 1){\n         urduMonth = \"فروری\"\n     }else if (month == 2){\n         urduMonth = \"مارچ\"\n     }else if (month == 3){\n         urduMonth = \"اپریل\"\n     }else if (month == 4){\n         urduMonth = \"مئی\"\n     }else if (month == 5){\n         urduMonth = \"جون\"\n     }else if (month == 6){\n         urduMonth = \"جولائ\"\n     }else if (month == 7){\n         urduMonth = \"اگست\"\n     }else if (month == 8){\n         urduMonth = \"ستمبر\"\n     }else if (month == 9){\n         urduMonth = \"اکتوبر\"\n     }else if (month == 10){\n         urduMonth = \"نومبر\"\n     }else if (month == 11){\n         urduMonth = \"دسمبر\"\n     }\n     var urduDay = \"\"\n     if(day==\"1\"){\n         urduDay = \"یکم\"\n     }else{\n         urduDay  = \"$day\"\n     }\n     if(isDateOnly==true){\n         return (\"${urduDay} ${urduMonth}\")\n     }else{//has time too\n         var hours = date.getUTCHours()\n         var minutes = date.getUTCMinutes()\n         var strMinutes = \"\"\n         if(minutes <10){\n             strMinutes = \"0${minutes}\"\n         }else{\n             strMinutes = minutes.toString()\n         }\n         var ampm=\"\"\n         if (hours == 0){\n             ampm = \"رات\"\n             hours = 12\n         }else if(hours > 0 && hours<4){//1-3\n             ampm = \"رات\"\n         }else if(hours>3 && hours<12){//4-11\n             ampm = \"صبح\"\n         }else if(hours>11&&hours<15){//12-2\n             ampm = \"دوپہر\"\n             hours -= 12\n             if(hours == 0){hours+=12}\n         }else if(hours>14&&hours<19){//3-6\n             ampm = \"شام\"\n             hours -= 12\n         }else{//7-11\n             ampm = \"رات\"\n             hours-=12\n         }\n         return (\"${urduDay} ${urduMonth} ${ampm} ${hours}:${strMinutes} بجے\")\n\n\n     }\n\n }",null,"import kotlinx.html.dom.append\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport kotlinx.html.*\nimport kotlinx.html.form\nimport kotlinx.html.js.*\nimport kotlinx.html.tr\nimport org.w3c.dom.*\nimport org.w3c.dom.events.Event\nimport kotlin.js.Date\n\nprivate const val IS_DEFAULT_INPUT_MODE_DATE_ONLY = true\n\nobject Ids {\n    const val HAIZ_INPUT_TABLE = \"haiz_input_table\"\n\n    object Row {\n        const val INPUT_START_TIME = \"input_start_time\"\n        const val INPUT_END_TIME = \"input_end_time\"\n        const val BUTTONS_CONTAINER = \"button_add_before_container\"\n        const val BUTTON_REMOVE = \"button_remove\"\n        const val BUTTON_ADD_BEFORE = \"button_add_before\"\n    }\n\n    const val CONTENT_ENG = \"content_eng\"\n    const val CONTENT_URDU = \"content_urdu\"\n    const val CONTENT_DATES = \"content_dates\"\n    const val CONTENT_DATES_DIFFERENCE = \"content_dates_difference\"\n    const val INPUT_CONTAINERS_CONTAINER = \"input_containers_container\"\n    const val INPUT_CONTAINER_PREFIX = \"input_container\"\n    const val INPUT_CONTAINER_PRIMARY = \"${INPUT_CONTAINER_PREFIX}_primary\"\n    const val INPUT_CONTAINER_SECONDARY = \"${INPUT_CONTAINER_PREFIX}_secondary\"\n    const val COMPARISON_CONTAINER = \"comparison_container\"\n    const val ISTIMRAR_CHECKBOX = \"istimrar_checkbox\"\n    const val PREGNANCY_CHECKBOX = \"pregnancy_checkbox\"\n    const val MUSTABEEN_CHECKBOX = \"mustabeen_checkbox\"\n    const val PREG_START_TIME_INPUT = \"preg_start_time_input\"\n    const val PREG_END_TIME_INPUT = \"preg_end_time_input\"\n    const val AADAT_HAIZ_INPUT = \"aadat_haiz_input\"\n    const val AADAT_TUHR_INPUT = \"aadat_tuhr_input\"\n    const val AADAT_NIFAS_INPUT = \"aadat_nifas_input\"\n    const val DATE_ONLY_RADIO = \"date_only_radio\"\n    const val DATE_TIME_RADIO = \"date_time_radio\"\n    const val DATE_AND_OR_RADIO = \"date_and_or_time\"\n\n    val pregnancyElementIds = listOf(\n        PREG_START_TIME_INPUT,\n        PREG_END_TIME_INPUT,\n        MUSTABEEN_CHECKBOX,\n        AADAT_NIFAS_INPUT\n    )\n}\n\nprivate val inputsContainersContainer get() = document.getElementById(Ids.INPUT_CONTAINERS_CONTAINER) as HTMLElement\nprivate val primaryInputsContainer get() = document.getElementById(Ids.INPUT_CONTAINER_PRIMARY) as HTMLElement\nprivate val secondaryInputsContainer get() = document.getElementById(Ids.INPUT_CONTAINER_SECONDARY) as HTMLElement?\n\nprivate val comparisonContainer get() = document.getElementById(Ids.COMPARISON_CONTAINER) as HTMLElement?\n\nprivate val HTMLElement.isDateOnly get() = (getChildById(Ids.DATE_ONLY_RADIO) as HTMLInputElement).checked\nprivate val HTMLElement.isIstimrar get() = (getChildById(Ids.ISTIMRAR_CHECKBOX) as HTMLInputElement).checked\nprivate val HTMLElement.isPregnancy get() = (getChildById(Ids.PREGNANCY_CHECKBOX) as HTMLInputElement).checked\nprivate val HTMLElement.mustabeen get() = (getChildById(Ids.MUSTABEEN_CHECKBOX) as HTMLInputElement).checked\nprivate val HTMLElement.pregStartTime get() = getChildById(Ids.PREG_START_TIME_INPUT) as HTMLInputElement\nprivate val HTMLElement.pregEndTime get() = getChildById(Ids.PREG_END_TIME_INPUT) as HTMLInputElement\nprivate val HTMLElement.aadatHaz get() = getChildById(Ids.AADAT_HAIZ_INPUT) as HTMLInputElement\nprivate val HTMLElement.aadatTuhr get() = getChildById(Ids.AADAT_TUHR_INPUT) as HTMLInputElement\nprivate val HTMLElement.aadatNifas get() = getChildById(Ids.AADAT_NIFAS_INPUT) as HTMLInputElement\nprivate val HTMLElement.contentEnglishElement get() = getChildById(Ids.CONTENT_ENG) as HTMLParagraphElement\nprivate val HTMLElement.contentUrduElement get() = getChildById(Ids.CONTENT_URDU) as HTMLParagraphElement\nprivate val HTMLElement.contentDatesElement get() = getChildById(Ids.CONTENT_DATES) as HTMLParagraphElement\nprivate val HTMLElement.contentDatesDifferenceElement get() = getChildById(Ids.CONTENT_DATES_DIFFERENCE) as HTMLParagraphElement\n\nprivate var HTMLElement.haizDatesList: List<Entry>?\n    get() = (contentDatesElement.asDynamic().haizDatesList as List<Entry>?)?.takeIf { it != undefined }\n    set(value) { contentDatesElement.asDynamic().haizDatesList = value }\n\nprivate val HTMLElement.pregnancyElements get() = Ids.pregnancyElementIds.map { id ->\n    getChildById(id) as HTMLInputElement\n}\n\nprivate val HTMLElement.haizInputDatesRows: List<HTMLTableRowElement>\n    get() {\n        val inputDatesTable = getChildById(Ids.HAIZ_INPUT_TABLE) as HTMLTableElement\n        val inputDatesTableBody = inputDatesTable.tBodies[0] as HTMLTableSectionElement\n        @Suppress(\"UNCHECKED_CAST\")\n        return inputDatesTableBody.rows.asList() as List<HTMLTableRowElement>\n    }\n\nprivate val HTMLTableRowElement.startTimeInput get() = getChildById(Ids.Row.INPUT_START_TIME) as HTMLInputElement\nprivate val HTMLTableRowElement.endTimeInput get() = getChildById(Ids.Row.INPUT_END_TIME) as HTMLInputElement\nprivate val HTMLTableRowElement.buttonsContainer get() = getChildById(Ids.Row.BUTTONS_CONTAINER)!!\nprivate val HTMLTableRowElement.removeButton get() = getChildById(Ids.Row.BUTTON_REMOVE) as HTMLButtonElement\nprivate val HTMLTableRowElement.addBeforeButton get() = getChildById(Ids.Row.BUTTON_ADD_BEFORE) as HTMLButtonElement?\n\nprivate val HTMLElement.haizTimeInputs get() = haizInputDatesRows.flatMap { row ->\n    listOf(row.startTimeInput, row.endTimeInput)\n}\n\nprivate val HTMLElement.timeInputsGroups get() = listOf(listOf(pregStartTime, pregEndTime), haizTimeInputs)\n\nfun main() {\n    window.onload = {\n        document.body!!.addInputLayout()\n        setupRows(primaryInputsContainer)\n        document.addEventListener(Events.VISIBILITY_CHANGE, {\n            if (!document.isHidden) {\n                setMaxToCurrentTimeForTimeInputs(primaryInputsContainer)\n            }\n        })\n    }\n}\n\nfun Node.addInputLayout() {\n    append {\n        headers()\n        div {\n            id = Ids.INPUT_CONTAINERS_CONTAINER\n            inputFormDiv {\n                id = Ids.INPUT_CONTAINER_PRIMARY\n            }\n        }\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.headers() {\n    h1 {\n        +\"Mashqi Sawal\"\n        // TODO: Add toggle button for Zallah to handle this\n        onClickFunction = { toggleSecondaryInputsContainer() }\n    }\n    p {\n        +\"\"\"\n            Please enter the start date-time for first dam in the first box, and the end date-time for that dam in the\n            second box. To add another period after that, press Add. If you need to remove a period in the middle, click\n            the remove button next to it. To add a spot, enter a period where the start time and the end time are the\n            same. If this masla ends with istimrar, make a period that ends on today's date, then check the istimrar\n            check box. Once all periods have been added, click Calculate button, to get the solution.\n        \"\"\".trimIndent()\n    }\n}\n\nprivate fun toggleSecondaryInputsContainer() {\n    if (secondaryInputsContainer?.remove() != null) {\n        comparisonContainer!!.remove()\n        return\n    }\n\n    primaryInputsContainer.after {\n        inputFormDiv(inputContainerToCopyFrom = primaryInputsContainer) {\n            id = Ids.INPUT_CONTAINER_SECONDARY\n        }\n    }\n    setupFirstRow(secondaryInputsContainer!!)\n}\n\nprivate fun appendCompareButtonIfNeeded() {\n    if (comparisonContainer != null ||\n        primaryInputsContainer.haizDatesList == null ||\n        secondaryInputsContainer?.haizDatesList == null\n    ) return\n\n    inputsContainersContainer.after {\n        div {\n            id = Ids.COMPARISON_CONTAINER\n            button(type = ButtonType.button) {\n                +\"Calculate difference\"\n                style = \"margin: 0 auto; display: block;\"\n                onClickFunction = {  compareResults()  }\n            }\n        }\n        content {\n            id = Ids.CONTENT_DATES_DIFFERENCE\n        }\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.inputFormDiv(\n    inputContainerToCopyFrom: HTMLElement? = null,\n    block : DIV.() -> Unit = {}\n) {\n    div {\n        style = \"width:50%; float: left;\"\n        inputForm(inputContainerToCopyFrom)\n        content()\n        block()\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.content() {\n    content {\n        id = Ids.CONTENT_ENG\n    }\n    content {\n        id = Ids.CONTENT_URDU\n        dir = Dir.rtl\n//            style += \"font-family: Helvetica\"\n    }\n    content {\n        id = Ids.CONTENT_DATES\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.inputForm(inputContainerToCopyFrom: HTMLElement?) {\n    form(action = \"javascript:void(0);\") {\n        dateConfigurationRadioButtons(inputContainerToCopyFrom)\n        br()\n        aadatInputs(inputContainerToCopyFrom)\n        br()\n        pregnancyCheckBox(inputContainerToCopyFrom)\n        br()\n        mustabeenCheckBox(inputContainerToCopyFrom)\n        br()\n        pregnancyStartTimeInput(inputContainerToCopyFrom)\n        br()\n        pregnancyEndTimeInput(inputContainerToCopyFrom)\n        br()\n        haizDatesInputTable(inputContainerToCopyFrom)\n        istimrarCheckBox(inputContainerToCopyFrom)\n        br()\n        calculateButton()\n        onSubmitFunction = { event -> parseEntries(findInputContainer(event)) }\n    }\n}\n\nprivate fun FlowContent.dateConfigurationRadioButtons(inputContainerToCopyFrom: HTMLElement?) {\n    val isDateOnly = inputContainerToCopyFrom?.isDateOnly ?: IS_DEFAULT_INPUT_MODE_DATE_ONLY\n    radioInput {\n        id = Ids.DATE_TIME_RADIO\n        name = Ids.DATE_AND_OR_RADIO\n        checked = !isDateOnly\n        onChangeFunction = { event -> onClickDateConfigurationRadioButton(findInputContainer(event)) }\n    }\n    label {\n        htmlFor = Ids.DATE_TIME_RADIO\n        +\"Date and Time\"\n    }\n    radioInput {\n        id = Ids.DATE_ONLY_RADIO\n        name = Ids.DATE_AND_OR_RADIO\n        checked = isDateOnly\n        onChangeFunction = { event -> onClickDateConfigurationRadioButton(findInputContainer(event)) }\n    }\n    label {\n        htmlFor = Ids.DATE_ONLY_RADIO\n        +\"Date only\"\n    }\n}\n\nprivate fun FlowContent.aadatInputs(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.AADAT_HAIZ_INPUT\n        +(\"Haiz Aadat: \")\n    }\n    input {\n        id = Ids.AADAT_HAIZ_INPUT\n        value = inputContainerToCopyFrom?.aadatHaz?.value.orEmpty()\n        onInputFunction = { event -> (event.currentTarget as HTMLInputElement).validateAadat(3..10) }\n    }\n    br()\n    label {\n        htmlFor = Ids.AADAT_TUHR_INPUT\n        +\"Tuhr Aadat: \"\n    }\n    input {\n        id = Ids.AADAT_TUHR_INPUT\n        value = inputContainerToCopyFrom?.aadatTuhr?.value.orEmpty()\n        onInputFunction = { event -> (event.currentTarget as HTMLInputElement).validateAadat(15..6*30) }\n    }\n    br()\n    label {\n        htmlFor = Ids.AADAT_NIFAS_INPUT\n        +\"Nifas Aadat: \"\n    }\n    input {\n        id = Ids.AADAT_NIFAS_INPUT\n        step = \"any\"\n        required = true\n        disabled = true\n        value = inputContainerToCopyFrom?.aadatNifas?.value.orEmpty()\n        onInputFunction = { event -> (event.currentTarget as HTMLInputElement).validateAadat(1..40) }\n    }\n}\n\nprivate fun HTMLInputElement.validateAadat(validityRange: ClosedRange<Int>) {\n    value = value.replace(\"[^0-9:]\".toRegex(), \"\")\n    val doubleValidityRange = validityRange.start.toDouble()..validityRange.endInclusive.toDouble()\n    setCustomValidity(try {\n        val days = parseDays(value)\n        require(days == null || days in doubleValidityRange) { \"Aadat is incorrect\" }\n        \"\"\n    } catch (e: IllegalArgumentException) {\n        e.message ?: \"Aadat is incorrect\"\n    })\n}\n\nprivate fun FlowContent.pregnancyCheckBox(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.PREGNANCY_CHECKBOX\n        +\"Pregnancy\"\n    }\n    checkBoxInput {\n        id = Ids.PREGNANCY_CHECKBOX\n        checked = inputContainerToCopyFrom?.isPregnancy == true\n        onChangeFunction = { event ->\n            val isChecked = (event.currentTarget as HTMLInputElement).checked\n            for (pregnancyElement in findInputContainer(event).pregnancyElements) {\n                pregnancyElement.disabled = !isChecked\n            }\n        }\n    }\n}\n\nprivate fun FlowContent.mustabeenCheckBox(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.MUSTABEEN_CHECKBOX\n        +\"Mustabeen ul Khilqah\"\n    }\n    checkBoxInput {\n        id = Ids.MUSTABEEN_CHECKBOX\n        checked = inputContainerToCopyFrom?.mustabeen == true\n        disabled = inputContainerToCopyFrom?.mustabeen == true\n    }\n}\n\nprivate fun FlowContent.pregnancyStartTimeInput(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.PREG_START_TIME_INPUT\n        +\"Pregnancy Start Time\"\n    }\n    pregnancyTimeInput(inputContainerToCopyFrom) {\n        id = Ids.PREG_START_TIME_INPUT\n        onChangeFunction = { event ->\n            findInputContainer(event).pregEndTime.min = (event.currentTarget as HTMLInputElement).value\n        }\n    }\n}\n\nprivate fun FlowContent.pregnancyEndTimeInput(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.PREG_END_TIME_INPUT\n        +\"Birth/Miscarriage time\"\n    }\n    pregnancyTimeInput(inputContainerToCopyFrom) {\n        id = Ids.PREG_END_TIME_INPUT\n        onChangeFunction = { event ->\n            findInputContainer(event).pregStartTime.max = (event.currentTarget as HTMLInputElement).value\n        }\n    }\n}\n\nprivate fun FlowContent.pregnancyTimeInput(inputContainerToCopyFrom: HTMLElement?, block: INPUT.() -> Unit = {}) {\n    if (inputContainerToCopyFrom != null) {\n        timeInput(inputContainerToCopyFrom.isDateOnly, inputContainerToCopyFrom.pregStartTime) {\n            disabled = true\n            block()\n        }\n    } else {\n        timeInput(IS_DEFAULT_INPUT_MODE_DATE_ONLY) {\n            disabled = true\n            max = currentTimeString(IS_DEFAULT_INPUT_MODE_DATE_ONLY)\n            block()\n        }\n    }\n}\n\nprivate fun FlowContent.istimrarCheckBox(inputContainerToCopyFrom: HTMLElement?) {\n    label {\n        htmlFor = Ids.ISTIMRAR_CHECKBOX\n        +\"Istimrar\"\n    }\n    checkBoxInput {\n        id = Ids.ISTIMRAR_CHECKBOX\n        checked = inputContainerToCopyFrom?.isIstimrar == true\n    }\n}\n\nprivate fun FlowContent.calculateButton() {\n    button {\n        +\"Calculate\"\n        onClickFunction = { event -> setMaxToCurrentTimeForTimeInputs(findInputContainer(event)) }\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.content(block : P.() -> Unit = {}) {\n    p {\n        style = \"white-space: pre-wrap;\"\n        block()\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.haizDatesInputTable(inputContainerToCopyFrom: HTMLElement?) {\n    table {\n        id = Ids.HAIZ_INPUT_TABLE\n        thead {\n            tr {\n                th { +\"Start Time\" }\n                th { +\"End Time\" }\n            }\n        }\n        tbody {\n            if (inputContainerToCopyFrom != null) {\n                val isDateOnly = inputContainerToCopyFrom.isDateOnly\n                for (inputDateRow in inputContainerToCopyFrom.haizInputDatesRows) {\n                    inputRow(isDateOnly, inputDateRow.startTimeInput, inputDateRow.endTimeInput)\n                }\n            } else {\n                inputRow(\n                    isDateOnlyLayout = IS_DEFAULT_INPUT_MODE_DATE_ONLY,\n                    minTimeInput = \"\",\n                    maxTimeInput = currentTimeString(IS_DEFAULT_INPUT_MODE_DATE_ONLY)\n                )\n            }\n        }\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.inputRow(isDateOnlyLayout: Boolean, minTimeInput: String, maxTimeInput: String) {\n    tr {\n        td {\n            timeInput(isDateOnlyLayout, minTimeInput, maxTimeInput, indexWithinRow = 0) {\n                id = Ids.Row.INPUT_START_TIME\n            }\n        }\n        td {\n            timeInput(isDateOnlyLayout, minTimeInput, maxTimeInput, indexWithinRow = 1) {\n                id = Ids.Row.INPUT_END_TIME\n            }\n        }\n        addRemoveButtonsTableData()\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.inputRow(\n    isDateOnlyLayout: Boolean,\n    startTimeInputToCopyFrom: HTMLInputElement,\n    endTimeInputToCopyFrom: HTMLInputElement\n) {\n    tr {\n        td {\n            timeInput(isDateOnlyLayout, startTimeInputToCopyFrom, indexWithinRow = 0) {\n                id = Ids.Row.INPUT_START_TIME\n            }\n        }\n        td {\n            timeInput(isDateOnlyLayout, endTimeInputToCopyFrom, indexWithinRow = 1) {\n                id = Ids.Row.INPUT_END_TIME\n            }\n        }\n        addRemoveButtonsTableData()\n    }\n}\n\nprivate fun TR.addRemoveButtonsTableData() {\n    td {\n        id = Ids.Row.BUTTONS_CONTAINER\n        addButton()\n        removeButton()\n    }\n}\n\nprivate fun FlowContent.timeInput(\n    isDateOnlyLayout: Boolean,\n    minTimeInput: String,\n    maxTimeInput: String,\n    indexWithinRow: Int,\n    block: INPUT.() -> Unit = {}\n) {\n    timeInput(isDateOnlyLayout, minTimeInput, maxTimeInput) {\n        onChangeFunction = { event -> setMinMaxForTimeInputsOnInput(event, indexWithinRow) }\n        block()\n    }\n}\n\nprivate fun FlowContent.timeInput(\n    isDateOnlyLayout: Boolean,\n    timeInputToCopyFrom: HTMLInputElement,\n    indexWithinRow: Int,\n    block: INPUT.() -> Unit = {}\n) {\n    timeInput(isDateOnlyLayout, timeInputToCopyFrom) {\n        onChangeFunction = { event -> setMinMaxForTimeInputsOnInput(event, indexWithinRow) }\n        block()\n    }\n}\n\nprivate fun FlowContent.timeInput(\n    isDateOnlyLayout: Boolean,\n    minTimeInput: String,\n    maxTimeInput: String,\n    block: INPUT.() -> Unit = {}\n) {\n    timeInput(isDateOnlyLayout) {\n        min = minTimeInput\n        max = maxTimeInput\n        block()\n    }\n}\n\nprivate fun FlowContent.timeInput(\n    isDateOnlyLayout: Boolean,\n    timeInputToCopyFrom: HTMLInputElement,\n    block: INPUT.() -> Unit = {}\n) {\n    timeInput(isDateOnlyLayout) {\n        value = timeInputToCopyFrom.value\n        min = timeInputToCopyFrom.min\n        max = timeInputToCopyFrom.max\n        block()\n    }\n}\n\nprivate fun FlowContent.timeInput(\n    isDateOnlyLayout: Boolean,\n    block: INPUT.() -> Unit = {}\n) {\n    customDateTimeInput(isDateOnlyLayout) {\n        required = true\n        onClickFunction = { event ->\n            setMaxToCurrentTimeForTimeInputs(findInputContainer(event))\n        }\n        block()\n    }\n}\n\nprivate fun FlowContent.removeButton() {\n    button(type = ButtonType.button) {\n        +\"Remove\"\n        id = Ids.Row.BUTTON_REMOVE\n        onClickFunction = { event ->\n            val row = findRow(event)\n            val inputContainer = findInputContainer(event)\n            updateMinMaxForTimeInputsBeforeRemovingRow(inputContainer, row.rowIndexWithinTableBody)\n            row.remove()\n            setupFirstRow(inputContainer)\n        }\n    }\n}\n\nprivate fun FlowContent.addButton() {\n    button(type = ButtonType.button) {\n        +\"Add\"\n        onClickFunction = { event ->\n            val row = findRow(event)\n            val inputContainer = findInputContainer(event)\n            row.after {\n                inputRow(\n                    inputContainer.isDateOnly,\n                    minTimeInput = row.endTimeInput.run { value.takeUnless(String::isEmpty) ?: min },\n                    maxTimeInput = row.endTimeInput.max\n                )\n            }\n            setupRows(inputContainer)\n        }\n    }\n}\n\nprivate fun TagConsumer<HTMLElement>.addBeforeButton() {\n    button(type = ButtonType.button) {\n        +\"Add Before\"\n        id = Ids.Row.BUTTON_ADD_BEFORE\n        onClickFunction = { event ->\n            val row = findRow(event)\n            val inputContainer = findInputContainer(event)\n            row.before {\n                inputRow(\n                    inputContainer.isDateOnly,\n                    minTimeInput = row.startTimeInput.min,\n                    maxTimeInput = row.startTimeInput.run { value.takeUnless(String::isEmpty) ?: max }\n                )\n            }\n            setupRows(inputContainer)\n        }\n    }\n}\n\nprivate fun findInputContainer(event: Event) =\n    (event.currentTarget as Element).getAncestor<HTMLElement> { it.id.startsWith(Ids.INPUT_CONTAINER_PREFIX)}!!\nprivate fun findRow(event: Event) = (event.currentTarget as Element).getAncestor<HTMLTableRowElement>()!!\n\nprivate fun setupRows(inputContainer: HTMLElement) {\n    setMaxToCurrentTimeForTimeInputs(inputContainer)\n    setupFirstRow(inputContainer)\n}\n\nprivate fun setupFirstRow(inputContainer: HTMLElement) {\n    updateRemoveButtonDisabledStateForFirstRow(inputContainer)\n    ensureAddFirstButtonOnlyShownInFirstRow(inputContainer)\n}\n\nprivate fun updateRemoveButtonDisabledStateForFirstRow(inputContainer: HTMLElement) {\n    val inputDatesRows = inputContainer.haizInputDatesRows\n    inputDatesRows.first().removeButton.disabled = inputDatesRows.size == 1\n    inputDatesRows.getOrNull(1)?.removeButton?.disabled = false\n}\n\nprivate fun ensureAddFirstButtonOnlyShownInFirstRow(inputContainer: HTMLElement) {\n    for ((index, row) in inputContainer.haizInputDatesRows.withIndex()) {\n        if (index > 0) {\n            row.addBeforeButton?.remove()\n        } else if (row.addBeforeButton == null) {\n            row.buttonsContainer.append { addBeforeButton() }\n        }\n    }\n}\n\nprivate fun setMaxToCurrentTimeForTimeInputs(inputContainer: HTMLElement) {\n    val currentTime = currentTimeString(inputContainer.isDateOnly)\n    for (timeInputsGroup in inputContainer.timeInputsGroups) {\n        for (timeInput in timeInputsGroup.asReversed()) {\n            timeInput.max = currentTime\n            if (timeInput.value.isNotEmpty()) break\n        }\n    }\n}\n\nprivate fun setMinMaxForTimeInputsOnInput(event: Event, indexWithinRow: Int) {\n    setMinMaxForTimeInputsOnInput(\n        findInputContainer(event),\n        (findRow(event).rowIndexWithinTableBody * 2) + indexWithinRow\n    )\n}\n\nprivate fun setMinMaxForTimeInputsOnInput(inputContainer: HTMLElement, index: Int) {\n    val timeInputs = inputContainer.haizTimeInputs\n    val timeInput = timeInputs[index]\n    val min: String\n    val max: String\n    val previousTimeInputs: List<HTMLInputElement>\n    val nextTimeInputs: List<HTMLInputElement>\n    val value = timeInput.value\n    if (value.isEmpty()) {\n        min = timeInput.min\n        max = timeInput.max\n        previousTimeInputs = timeInputs.take(index + 1)\n        nextTimeInputs = timeInputs.drop(index)\n    } else {\n        min = value\n        max = value\n        previousTimeInputs = timeInputs.take(index)\n        nextTimeInputs = timeInputs.drop(index + 1)\n    }\n    for (previousTimeInput in previousTimeInputs.asReversed()) {\n        previousTimeInput.max = max\n        if (previousTimeInput.value.isNotEmpty()) break\n    }\n    for (nextTimeInput in nextTimeInputs) {\n        nextTimeInput.min = min\n        if (nextTimeInput.value.isNotEmpty()) break\n    }\n}\n\nprivate fun updateMinMaxForTimeInputsBeforeRemovingRow(inputContainer: HTMLElement, rowIndex: Int) {\n    val timeInputs = inputContainer.haizTimeInputs\n    val startDateIndex = rowIndex * 2\n    val endDateIndex = startDateIndex + 1\n    val min = timeInputs[startDateIndex].min\n    val max = timeInputs[endDateIndex].max\n    val previousTimeInputs = timeInputs.take(startDateIndex)\n    val nextTimeInputs = timeInputs.drop(endDateIndex + 1)\n    for (previousTimeInput in previousTimeInputs.asReversed()) {\n        previousTimeInput.max = max\n        if (previousTimeInput.value.isNotEmpty()) break\n    }\n    for (nextTimeInput in nextTimeInputs) {\n        nextTimeInput.min = min\n        if (nextTimeInput.value.isNotEmpty()) break\n    }\n}\n\nprivate fun onClickDateConfigurationRadioButton(inputContainer: HTMLElement) {\n    val isDateOnly = inputContainer.isDateOnly\n    for (timeInput in inputContainer.timeInputsGroups.flatten()) {\n        val newValue = convertInputValue(timeInput.value, isDateOnly)\n        val newMin = convertInputValue(timeInput.min, isDateOnly)\n        val newMax = convertInputValue(timeInput.max, isDateOnly)\n\n        val dateInputType = if (isDateOnly) InputType.date else InputType.dateTimeLocal\n        timeInput.type = dateInputType.realValue\n\n        timeInput.value = newValue\n        timeInput.min = newMin\n        timeInput.max = newMax\n    }\n    if (!isDateOnly) {\n        setMaxToCurrentTimeForTimeInputs(inputContainer)\n    }\n}\n\nprivate fun parseEntries(inputContainer: HTMLElement) {\n    println(\"Calculate button was clicked\")\n\n    with(inputContainer) {\n        val entries = haizInputDatesRows.map { row ->\n            Entry(\n                startTime = Date(row.startTimeInput.valueAsNumber),\n                endTime = Date(row.endTimeInput.valueAsNumber)\n            )\n        }\n        @Suppress(\"UnsafeCastFromDynamic\")\n        val output = handleEntries(\n            entries,\n            isIstimrar,\n            parseDays(aadatHaz.value),\n            parseDays(aadatTuhr.value),\n            isDateOnly,\n            isPregnancy,\n            Pregnancy(\n                pregStartTime.valueAsDate,\n                pregEndTime.valueAsDate,\n                parseDays(aadatNifas.value),\n                mustabeen\n            )\n        )\n        contentEnglishElement.innerHTML = output.englishText\n        contentUrduElement.innerHTML = output.urduText\n        contentDatesElement.innerHTML = output.haizDatesText\n        haizDatesList = output.hazDatesList\n    }\n    appendCompareButtonIfNeeded()\n\n}\n\nprivate fun compareResults(): String {\n    val primaryHaizDatesList = primaryInputsContainer.haizDatesList!!\n    val secondaryHaizDatesList = secondaryInputsContainer!!.haizDatesList!!\n    //step 1: merge them into one list\n    var dateTypeList = mutableListOf<DateTypeList>()\n    for(date in primaryHaizDatesList){\n        dateTypeList += DateTypeList(date.startTime,DateTypes.START)\n        dateTypeList += DateTypeList(date.endTime,DateTypes.END)\n    }\n    for(date in secondaryHaizDatesList){\n        dateTypeList += DateTypeList(date.startTime,DateTypes.START)\n        dateTypeList += DateTypeList(date.endTime,DateTypes.END)\n    }\n    //step 2: order list by date\n    dateTypeList.sortBy { it.date.getTime() }\n\n    //step 3: create a counter\n    var counter = 0\n\n    //step 4: step through the list, create an output list\n    var outputList = mutableListOf<DateTypeList>()\n    for(dateType in dateTypeList){\n        //plus 1 for every start time, -1 for every end time\n        if(dateType.type==DateTypes.START){\n            counter++\n        }else{//the type is end\n            counter--\n        }\n\n        if(counter == 0){\n            outputList += DateTypeList(dateType.date, DateTypes.YAQEENI_PAKI)\n        }else if(counter == 1){\n            outputList += DateTypeList(dateType.date, DateTypes.AYYAAM_E_SHAKK)\n        }else{//counter is 2\n            outputList += DateTypeList(dateType.date, DateTypes.YAQEENI_NA_PAKI)\n        }\n    }\n\n    //create a people-friendly version of output list\n    var str = \"\"\n    var i=0\n    while (i<outputList.size-1){\n        var startTime = outputList[i].date\n        var endTime = outputList[i+1].date\n        var type = \"\"\n        if (outputList[i].type==DateTypes.YAQEENI_PAKI){type = \"yaqeeni paki\"}\n        else if (outputList[i].type==DateTypes.YAQEENI_NA_PAKI){type = \"yaqeeni na paki\"}\n        else if (outputList[i].type==DateTypes.AYYAAM_E_SHAKK){type = \"ayyaam-e-shakk\"}\n\n        if(startTime.getTime()!=endTime.getTime()){\n            str += \"From ${parseDate(startTime,true)} to ${parseDate(endTime,true)} is ${type}<br>\\n\\n\"\n        }\n\n        i++\n    }\n    println(str)\n\n    return str\n\n}\nclass DateTypeList (\n    val date:Date,\n    val type: DateTypes\n)\nenum class DateTypes {START,END, YAQEENI_PAKI,YAQEENI_NA_PAKI,AYYAAM_E_SHAKK}\n\nclass DurationTypes (\n    val startTime: Date,\n    val endTime: Date,\n    val type: DateTypes\n        )",null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(701);\n"],"sourceRoot":""}